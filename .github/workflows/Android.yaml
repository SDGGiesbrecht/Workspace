# Android.yaml
#
# This source file is part of the Workspace open source project.
# Diese Quelldatei ist Teil des quelloffenen Arbeitsbereich‐Projekt.
# https://github.com/SDGGiesbrecht/Workspace#workspace
#
# Copyright ©2021 Jeremy David Giesbrecht and the Workspace project contributors.
# Urheberrecht ©2021 Jeremy David Giesbrecht und die Mitwirkenden des Arbeitsbereich‐Projekts.
#
# Soli Deo gloria.
#
# Licensed under the Apache Licence, Version 2.0.
# See http://www.apache.org/licenses/LICENSE-2.0 for licence information.

name: Android

on: [push, pull_request]

jobs:
  Android:
    name: Android
    runs-on: ubuntu-20.04
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Cache Workspace
      uses: actions/cache@v1
      with:
        key: Android‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Fetch Android NDK
      shell: bash
      run: |
        set -x
        curl \
          'https://dl.google.com/android/repository/android-ndk-r23b-linux.zip' \
          --output '/tmp/android-ndk-r23b-linux.zip' \
          --location
        unzip /tmp/android-ndk-r23b-linux.zip -d /tmp
        rm -rf ${ANDROID_HOME}/ndk-bundle
        sudo mkdir -p ${ANDROID_HOME}/ndk-bundle
        sudo cp -R /tmp/android-ndk-r23b/* ${ANDROID_HOME}/ndk-bundle
    - name: Install Swift
      shell: bash
      run: |
        set -x
        sudo rm -rf /usr/lib/clang/10.0.0
        sudo rm -rf /usr/lib/python3/dist-packages/lldb
        curl \
          'https://swift.org/builds/swift-5.5-release/ubuntu2004/swift-5.5-RELEASE/swift-5.5-RELEASE-ubuntu20.04.tar.gz' \
          --output '/tmp/swift-5.5-RELEASE-ubuntu20.04.tar.gz' \
          --location
        tar --extract \
          --file /tmp/swift-5.5-RELEASE-ubuntu20.04.tar.gz \
          --directory /tmp \
          --verbose
        sudo mkdir -p /
        sudo cp -R /tmp/swift-5.5-RELEASE-ubuntu20.04/* /
        export PATH="/usr/bin:${PATH}"
        echo "PATH=${PATH}" >> $GITHUB_ENV
        swift --version
    - name: Fetch Android SDK
      shell: bash
      run: |
        set -x
        curl \
          'https://github.com/buttaface/swift-android-sdk/releases/download/5.5/swift-5.5-android-x86_64-24-sdk.tar.xz' \
          --output '/tmp/swift-5.5-android-x86_64-24-sdk.tar.xz' \
          --location
        tar --extract \
          --file /tmp/swift-5.5-android-x86_64-24-sdk.tar.xz \
          --directory /tmp \
          --verbose
        sudo mkdir -p /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk
        sudo cp -R /tmp/swift-5.5-android-x86_64-24-sdk/* /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk
        sudo chmod -R a+rwx /Library
        sed --in-place \
          "s%/home/butta/android-ndk-r23%${ANDROID_HOME}/ndk-bundle%" \
          /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/x86_64/glibc.modulemap
        sed --in-place \
          "s%/home/butta/swift-5.5-android-x86_64-24-sdk%/Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk%" \
          /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/x86_64/glibc.modulemap
        ln \
          /usr/lib/clang/10.0.0 \
          /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/clang \
          --symbolic \
          --force
    - name: Build
      shell: bash
      run: |
        set -x
        export TARGETING_ANDROID=true
        swift build --triple x86_64-unknown-linux-android \
          --build-tests \
          --sdk ${ANDROID_HOME}/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/sysroot \
          -Xswiftc -resource-dir -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift \
          -Xswiftc -tools-directory -Xswiftc ${ANDROID_HOME}/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin \
          -Xswiftc -Xclang-linker -Xswiftc --target=x86_64-linux-android24 \
          -Xswiftc -use-ld=lld \
          -Xcc -fPIC \
          -Xcc -lstdc++
    - name: Copy libraries
      shell: bash
      run: |
        set -x
        mkdir -p .build/x86_64-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/*.so .build/x86_64-unknown-linux-android/debug
        mkdir -p .build/x86_64-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/*.so .build/x86_64-unknown-linux-android/debug
    - name: Upload tests
      uses: actions/upload-artifact@v1
      with:
        name: tests
        path: .build/x86_64-unknown-linux-android/debug
  Android_II:
    name: Android II
    runs-on: macos-11
    needs: Android
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Download tests
      uses: actions/download-artifact@v1
      with:
        name: tests
        path: .build/x86_64-unknown-linux-android/debug
    - name: Test
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 24
        arch: x86_64
        script: |
          adb -e push . /data/local/tmp/Package
          adb -e shell 'chmod -R +x /data/local/tmp/Package/.build/x86_64-unknown-linux-android/debug'
          adb -e shell 'LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/data/local/tmp/Package/.build/x86_64-unknown-linux-android/debug HOME=/data/local/tmp/Home SWIFTPM_PACKAGE_ROOT=/data/local/tmp/Package /data/local/tmp/Package/.build/x86_64-unknown-linux-android/debug/WorkspacePackageTests.xctest'
