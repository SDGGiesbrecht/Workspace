# Workspace Validation.yaml
#
# This source file is part of the Workspace open source project.
# Diese Quelldatei ist Teil des quelloffenen Arbeitsbereich‐Projekt.
# https://github.com/SDGGiesbrecht/Workspace#workspace
#
# Copyright ©2019–2020 Jeremy David Giesbrecht and the Workspace project contributors.
# Urheberrecht ©2019–2020 Jeremy David Giesbrecht und die Mitwirkenden des Arbeitsbereich‐Projekts.
#
# Soli Deo gloria.
#
# Licensed under the Apache Licence, Version 2.0.
# See http://www.apache.org/licenses/LICENSE-2.0 for licence information.

name: Workspace Validation

on: [push, pull_request]

jobs:
  Android:
    runs-on: ubuntu-18.04
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Cache Workspace
      uses: actions/cache@v1
      with:
        key: Android‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Install Swift
      shell: bash
      run: |
        set -x
        curl --location \
          'https://swift.org/builds/swift-5.2.1-release/ubuntu1804/swift-5.2.1-RELEASE/swift-5.2.1-RELEASE-ubuntu18.04.tar.gz' \
          --output '/tmp/swift-5.2.1-RELEASE-ubuntu18.04.tar.gz'
        tar --extract --file /tmp/swift-5.2.1-RELEASE-ubuntu18.04.tar.gz --directory /tmp
        mkdir -p /
        sudo cp -R /tmp/swift-5.2-RELEASE-ubuntu18.04/* /
        swift --version
    - name: Fetch Android SDK
      shell: bash
      run: |
        set -x
        curl --location \
          'https://github.com/compnerd/swift-build/releases/download/v5.2.1/sdk-android-x86_64.zip' \
          --output '/tmp/sdk-android-x86_64.zip'
        unzip /tmp/sdk-android-x86_64.zip -d /tmp
        mkdir -p /
        cp -R /tmp/sdk-android-x86_64/* /
        sed -i -e s~C:/Microsoft/AndroidNDK64/android-ndk-r16b~${ANDROID_HOME}/ndk-bundle~g /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/x86_64/glibc.modulemap
        sudo apt-get update --assume-yes
        sudo apt-get install --assume-yes patchelf
        patchelf --replace-needed lib/swift/android/x86_64/libswiftCore.so libswiftCore.so /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/libswiftSwiftOnoneSupport.so
        patchelf --replace-needed lib/swift/android/x86_64/libswiftCore.so libswiftCore.so /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/libswiftGlibc.so
    - name: Fetch ICU
      shell: bash
      run: |
        set -x
        curl --location \
          'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/icu-android-x64.zip' \
          --output '/tmp/icu-android-x64.zip'
        unzip /tmp/icu-android-x64.zip -d /tmp
        mkdir -p /
        cp -R /tmp/icu-android-x64/* /
        curl --location \
          'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/libicudt64.so' \
          --output '/Library/icu-64/usr/lib/libicudt64.so'
    - name: Build
      shell: bash
      run: |
        set -x
        export TARGETING_ANDROID=true
        swift build --destination .github/workflows/Android/SDK.json \
          --build-tests --enable-test-discovery \
          -Xswiftc -resource-dir -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift \
          -Xcc --sysroot=${ANDROID_HOME}/ndk-bundle/sysroot \
          -Xswiftc -tools-directory -Xswiftc ${ANDROID_HOME}/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin \
          -Xswiftc -Xclang-linker -Xswiftc --gcc-toolchain=${ANDROID_HOME}/ndk-bundle/toolchains/x86_64-4.9/prebuilt/linux-x86_64 \
          -Xswiftc -Xclang-linker -Xswiftc --sysroot=${ANDROID_HOME}/ndk-bundle/platforms/android-29/arch-x86_64 \
          -Xswiftc -I -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android/x86_64 \
          -Xswiftc -L -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android
    - name: Copy libraries
      shell: bash
      run: |
        set -x
        mkdir -p .build/x86_64-unknown-linux-android/debug
        cp -R ${ANDROID_HOME}/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/x86_64/* .build/x86_64-unknown-linux-android/debug
        mkdir -p .build/x86_64-unknown-linux-android/debug
        cp -R /Library/icu-64/usr/lib/* .build/x86_64-unknown-linux-android/debug
        mkdir -p .build/x86_64-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/* .build/x86_64-unknown-linux-android/debug
        mkdir -p .build/x86_64-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android/* .build/x86_64-unknown-linux-android/debug
    - name: Upload tests
      uses: actions/upload-artifact@v1
      with:
        name: tests
        path: .build/x86_64-unknown-linux-android/debug
  Android_II:
    name: Android II
    runs-on: macos-10.15
    needs: Android
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Download tests
      uses: actions/download-artifact@v1
      with:
        name: tests
        path: .build/x86_64-unknown-linux-android/debug
    - name: Prepare script
      shell: bash
      run: |
        set -x
        mkdir -p .build/SDG
        echo '
        set -e
        adb -e push . /data/local/tmp/Package
        adb -e shell chmod -R +x /data/local/tmp/Package/.build/x86_64-unknown-linux-android/debug
        adb -e shell \
          LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/data/local/tmp/Package/.build/x86_64-unknown-linux-android/debug \
          HOME=/data/local/tmp/Home \
          SWIFTPM_PACKAGE_ROOT=/data/local/tmp/Package \
          /data/local/tmp/Package/.build/x86_64-unknown-linux-android/debug/WorkspacePackageTests.xctest
        ' > .build/SDG/Emulator.sh
        chmod +x .build/SDG/Emulator.sh
    - name: Install emulator
      uses: malinskiy/action-android/install-sdk@release/0.0.5
    - name: Test
      uses: malinskiy/action-android/emulator-run-cmd@release/0.0.5
      with:
        abi: x86_64
        cmd: .build/SDG/Emulator.sh
