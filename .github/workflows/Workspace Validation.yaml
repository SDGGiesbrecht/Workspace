# Workspace Validation.yaml
#
# This source file is part of the Workspace open source project.
# Diese Quelldatei ist Teil des qeulloffenen Arbeitsbereich‐Projekt.
# https://github.com/SDGGiesbrecht/Workspace#workspace
#
# Copyright ©2019–2020 Jeremy David Giesbrecht and the Workspace project contributors.
# Urheberrecht ©2019–2020 Jeremy David Giesbrecht und die Mitwirkenden des Arbeitsbereich‐Projekts.
#
# Soli Deo gloria.
#
# Licensed under the Apache Licence, Version 2.0.
# See http://www.apache.org/licenses/LICENSE-2.0 for licence information.

name: Workspace Validation

on: [push, pull_request]

jobs:
  Android_Build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Android‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        echo 'Fetching Swift...'
        repository_directory=$(pwd)
        mkdir -p .build/SDG/Swift
        cd .build/SDG/Swift
        curl -o Swift.tar.gz 'https://swift.org/builds/swift-5.1.1-release/ubuntu1804/swift-5.1.1-RELEASE/swift-5.1.1-RELEASE-ubuntu18.04.tar.gz'
        tar --extract --file Swift.tar.gz
        sudo cp -R swift-5.1.1-RELEASE-ubuntu18.04/usr/* /usr/
        cd "${repository_directory}"
        swift --version

        echo 'Fetching Swift cross‐compilation toolchain...'
        mkdir -p .build/SDG/Experimental_Swift
        cd .build/SDG/Experimental_Swift
        curl -L -o toolchain-linux-x64.zip 'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/toolchain-linux-x64.zip'
        unzip toolchain-linux-x64.zip
        sudo mv toolchain-linux-x64/Library /Library
        chmod -R a+rwx /Library
        cd "${repository_directory}"
        /Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin/swift --version

        echo 'Fetching Swift Android SDK...'
        cd .build/SDG/Experimental_Swift
        curl -L -o sdk-android-x86.zip 'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/sdk-android-x86.zip'
        unzip sdk-android-x86.zip
        mv sdk-android-x86/Library/Developer/Platforms /Library/Developer/Platforms
        sed -i -e s~C:/Microsoft/AndroidNDK64/android-ndk-r16b~${ANDROID_HOME}/ndk-bundle~g /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/i686/glibc.modulemap
        cp -R "${ANDROID_HOME}/ndk-bundle/platforms/android-29/arch-x86/"* /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk
        cd "${repository_directory}"

        echo 'Fetching ICU...'
        cd .build/SDG/Experimental_Swift
        curl -L -o icu-android-x86.zip 'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/icu-android-x86.zip'
        unzip icu-android-x86.zip
        mv icu-android-x86/Library/icu-64 /Library/icu-64
        cd "${repository_directory}"

        echo 'Building Workspace...'
        export TARGETING_ANDROID=true
        swift build --destination .github/workflows/Android/SDK.json \
          --build-tests --enable-test-discovery \
          -Xswiftc -resource-dir -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift \
          -Xswiftc -tools-directory -Xswiftc ${ANDROID_HOME}/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin \
          -Xswiftc -Xclang-linker -Xswiftc --gcc-toolchain=${ANDROID_HOME}/ndk-bundle/toolchains/x86-4.9/prebuilt/linux-x86_64 \
          -Xcc -I${ANDROID_HOME}/ndk-bundle/sysroot/usr/include \
          -Xcc -I${ANDROID_HOME}/ndk-bundle/sysroot/usr/include/i686-linux-android \
          -Xswiftc -I -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android/i686 \
          -Xswiftc -L -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android \
          -Xswiftc -Xclang-linker -Xswiftc -fuse-ld=lld

        echo 'Copying libraries...'
        cp -R "${ANDROID_HOME}/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/x86/"* .build/i686-unknown-linux-android/debug
        cp -R /Library/icu-64/usr/lib/* .build/i686-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/* .build/i686-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/* .build/i686-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/* .build/i686-unknown-linux-android/debug/lib/swift/android/i686
        ls .build/i686-unknown-linux-android/debug/lib/swift/android/i686
        cp -R /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android/* .build/i686-unknown-linux-android/debug
    - uses: actions/upload-artifact@v1
      with:
        name: products
        path: .build/i686-unknown-linux-android/debug
  Android_Test:
    runs-on: macos-latest
    needs: Android_Build
    steps:
    - uses: actions/checkout@v1
    - uses: actions/download-artifact@v1
      with:
        name: products
        path: .build/i686-unknown-linux-android/debug
    - run: |
        mkdir -p .build/SDG
        echo '
        set -e
        adb -e push .build/i686-unknown-linux-android/debug /data/local/tmp/SDG/.build/i686-unknown-linux-android/debug
        adb -e shell chmod -R +x /data/local/tmp/SDG/.build/i686-unknown-linux-android/debug
        adb -e shell ls /data/local/tmp/SDG/.build/i686-unknown-linux-android/debug/lib/swift/android/i686
        adb -e shell PWD=/data/local/tmp/SDG/.build/i686-unknown-linux-android/debug pwd
        adb -e shell LD_LIBRARY_PATH=/data/local/tmp/SDG/.build/i686-unknown-linux-android/debug PWD=/data/local/tmp/SDG/.build/i686-unknown-linux-android/debug /data/local/tmp/SDG/.build/i686-unknown-linux-android/debug/WorkspacePackageTests.xctest
        ' > .build/SDG/Emulator.sh
        chmod +x .build/SDG/Emulator.sh
    - uses: malinskiy/action-android/install-sdk@release/0.0.5
    - uses: malinskiy/action-android/emulator-run-cmd@release/0.0.5
      with:
        abi: x86
        cmd: .build/SDG/Emulator.sh
