# Workspace Validation.yaml
#
# This source file is part of the Workspace open source project.
# Diese Quelldatei ist Teil des qeulloffenen Arbeitsbereich‐Projekt.
# https://github.com/SDGGiesbrecht/Workspace#workspace
#
# Copyright ©2019–2020 Jeremy David Giesbrecht and the Workspace project contributors.
# Urheberrecht ©2019–2020 Jeremy David Giesbrecht und die Mitwirkenden des Arbeitsbereich‐Projekts.
#
# Soli Deo gloria.
#
# Licensed under the Apache Licence, Version 2.0.
# See http://www.apache.org/licenses/LICENSE-2.0 for licence information.

name: Workspace Validation

on: [push, pull_request]

jobs:
  Windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Windows‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      shell: bash
      run: |
        echo 'Setting up Visual Studio... (in order to proceed as though in the Native Tools Command Prompt)'
        repository_directory=$(pwd)
        cd '/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build'
        echo 'export -p > exported_environment.sh' > nested_bash.sh
        echo 'vcvarsall.bat x64 && "C:/Program Files/Git/usr/bin/bash" -c ./nested_bash.sh' > export_environment.bat
        cmd "/c export_environment.bat"
        source ./exported_environment.sh
        if [ -z "$INCLUDE" ]; then echo 'Failed to set up Visual Studio.'; exit 1; fi
        echo "Significant environment:"
        echo "${UniversalCRTSdkDir}"
        echo "${UCRTVersion}"
        echo "${VCToolsInstallDir}"
        curl -L 'https://raw.githubusercontent.com/apple/swift/master/stdlib/public/Platform/ucrt.modulemap' -o "${UniversalCRTSdkDir}/Include/${UCRTVersion}/ucrt/module.modulemap"
        curl -L 'https://raw.githubusercontent.com/apple/swift/master/stdlib/public/Platform/visualc.modulemap' -o "${VCToolsInstallDir}/include/module.modulemap"
        curl -L 'https://raw.githubusercontent.com/apple/swift/master/stdlib/public/Platform/visualc.apinotes' -o "${VCToolsInstallDir}/include/visualc.apinotes"
        curl -L 'https://raw.githubusercontent.com/apple/swift/master/stdlib/public/Platform/winsdk.modulemap' -o "${UniversalCRTSdkDir}/Include/${UCRTVersion}/um/module.modulemap"
        echo 'Fetching ICU...'
        cd "${repository_directory}"
        experimental_Swift_directory="${repository_directory}/.build/SDG/Experimental_Swift"
        mkdir -p "${experimental_Swift_directory}"
        cd "${experimental_Swift_directory}"
        curl -L http://download.icu-project.org/files/icu4c/64.2/icu4c-64_2-Win64-MSVC2017.zip --output ICU.zip
        7z x ICU.zip -oICU
        echo 'Fetching Swift...'
        curl -o swift-build.py 'https://raw.githubusercontent.com/compnerd/swift-build/master/utilities/swift-build.py'
        python -m pip install --user azure-devops tabulate
        echo 'Downloading... (This is could to take up to 10 minutes.)'
        python swift-build.py --build-id 'VS2019 Swift 5.2' --latest-artifacts --filter windows-x64 --download > /dev/null
        7z x toolchain-windows-x64.zip
        mv toolchain-windows-x64 Toolchains
        7z x sdk-windows-x64.zip
        mv sdk-windows-x64/Library/Developer/Platforms Toolchains/Library/Developer/Platforms
        cd "${repository_directory}"
        developer_directory="${experimental_Swift_directory}/Toolchains/Library/Developer"
        toolchain_bin_directory="${developer_directory}/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin"
        export PATH="${toolchain_bin_directory}:${PATH}"
        swift --version
        echo 'Setting up CMake...'
        cmake_directory='.build/SDG/CMake'
        sdk_user_directory="${developer_directory}/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr"
        sdk_resource_directory="${sdk_user_directory}/lib/swift"
        sdk_resource_directory_windows=$(echo "${sdk_resource_directory}" | sed -e 's/^\///' -e 's/\//\\/g' -e 's/^./\0:/')
        echo 'Building Workspace...'
        cmake -G Ninja -S .github/workflows/Windows -B "${cmake_directory}" -DCMAKE_Swift_FLAGS="-resource-dir ${sdk_resource_directory_windows} -L${sdk_resource_directory_windows}\windows" -DCMAKE_Swift_LINK_FLAGS="-resource-dir ${sdk_resource_directory_windows} -L${sdk_resource_directory_windows}\windows"
        cmake --build "${cmake_directory}"
        echo 'Fetching Swift’s runtime dependencies...'
        cp -R "${experimental_Swift_directory}/ICU/bin64/"* "${cmake_directory}/bin/"
        cp -R "${sdk_user_directory}/bin/"* "${cmake_directory}/bin/"
        echo 'Testing Workspace...'
        cd "${cmake_directory}"
        ctest --output-on-failure
