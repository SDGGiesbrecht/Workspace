# Workspace Validation.yaml
#
# This source file is part of the Workspace open source project.
# Diese Quelldatei ist Teil des qeulloffenen Arbeitsbereich‐Projekt.
# https://github.com/SDGGiesbrecht/Workspace#workspace
#
# Copyright ©2019–2020 Jeremy David Giesbrecht and the Workspace project contributors.
# Urheberrecht ©2019–2020 Jeremy David Giesbrecht und die Mitwirkenden des Arbeitsbereich‐Projekts.
#
# Soli Deo gloria.
#
# Licensed under the Apache Licence, Version 2.0.
# See http://www.apache.org/licenses/LICENSE-2.0 for licence information.

name: Workspace Validation

on: [push, pull_request]

jobs:
  macOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        './Validate (macOS).command' •job macos •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
  Windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Windows‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      shell: bash
      run: |
        repository_directory=$(pwd)
        cd '/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build'
        echo 'export -p > exported_environment.sh' > nested_bash.sh
        echo 'vcvarsall.bat x64 && "C:/Program Files/Git/usr/bin/bash" -c ./nested_bash.sh' > export_environment.bat
        cmd "/c export_environment.bat"
        source ./exported_environment.sh
        if [ -z "$INCLUDE" ]; then echo 'Failed to set up Visual Studio.'; exit 1; fi
        cd "${repository_directory}"
        experimental_Swift_directory="${repository_directory}/.build/SDG/Experimental_Swift"
        mkdir -p "${experimental_Swift_directory}"
        cd "${experimental_Swift_directory}"
        curl -L http://download.icu-project.org/files/icu4c/64.2/icu4c-64_2-Win64-MSVC2017.zip --output ICU.zip
        7z x ICU.zip -oICU
        curl -o swift-build.py 'https://raw.githubusercontent.com/compnerd/swift-build/master/utilities/swift-build.py'
        python -m pip install --user azure-devops tabulate
        echo 'Fetching Swift... (This is could to take up to 10 minutes.)'
        python swift-build.py --build-id 'VS2019 Swift 5.2' --latest-artifacts --filter windows-x64 --download > /dev/null
        7z x toolchain-windows-x64.zip
        mv toolchain-windows-x64 Toolchains
        7z x sdk-windows-x64.zip
        mv sdk-windows-x64/Library/Developer/Platforms Toolchains/Library/Developer/Platforms
        cd "${repository_directory}"
        developer_directory="${experimental_Swift_directory}/Toolchains/Library/Developer"
        toolchain_bin_directory="${developer_directory}/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin"
        export PATH="${toolchain_bin_directory}:${PATH}"
        swift --version
        cmake_directory='.build/SDG/CMake'
        sdk_user_directory="${developer_directory}/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr"
        sdk_resource_directory="${sdk_user_directory}/lib/swift"
        sdk_resource_directory_windows=$(echo "${sdk_resource_directory}" | sed -e 's/^\///' -e 's/\//\\/g' -e 's/^./\0:/')
        cmake -G Ninja -S .github/workflows/Windows -B "${cmake_directory}" -DCMAKE_Swift_FLAGS="-resource-dir ${sdk_resource_directory_windows}"
        cmake --build "${cmake_directory}"
        cp -R "${experimental_Swift_directory}/ICU/bin64/"* "${cmake_directory}/bin/"
        cp -R "${sdk_user_directory}/bin/"* "${cmake_directory}/bin/"
        cd "${cmake_directory}"
        ctest --output-on-failure
  Linux:
    runs-on: ubuntu-18.04
    container: swift:5.1.3-bionic
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Linux‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        apt-get update
        apt-get install --assume-yes curl libsqlite3-dev libncurses-dev
        './Refresh (macOS).command' •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        './Validate (macOS).command' •job linux •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        chmod -R a+rwx .
  tvOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        swift run test‐tvos‐simulator •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
  iOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        swift run test‐ios‐simulator •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
  Miscellaneous:
    runs-on: ubuntu-18.04
    container: swift:5.1.3-bionic
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Linux‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        apt-get update
        apt-get install --assume-yes curl libsqlite3-dev libncurses-dev
        './Refresh (macOS).command' •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        './Validate (macOS).command' •job miscellaneous •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        chmod -R a+rwx .
