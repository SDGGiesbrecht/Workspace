# Workspace Validation.yaml
#
# This source file is part of the Workspace open source project.
# Diese Quelldatei ist Teil des quelloffenen Arbeitsbereich‐Projekt.
# https://github.com/SDGGiesbrecht/Workspace#workspace
#
# Copyright ©2019–2020 Jeremy David Giesbrecht and the Workspace project contributors.
# Urheberrecht ©2019–2020 Jeremy David Giesbrecht und die Mitwirkenden des Arbeitsbereich‐Projekts.
#
# Soli Deo gloria.
#
# Licensed under the Apache Licence, Version 2.0.
# See http://www.apache.org/licenses/LICENSE-2.0 for licence information.

name: Workspace Validation

on: [push, pull_request]

jobs:
  Windows:
    runs-on: windows-2019
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Cache Workspace
      uses: actions/cache@v1
      with:
        key: Windows‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Set Visual Studio up
      shell: bash
      run: |
        set -x
        cd '/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build'
        echo 'export -p > exported_environment.sh' > nested_bash.sh
        echo 'vcvarsall.bat x64 && "C:/Program Files/Git/usr/bin/bash" -c ./nested_bash.sh' > export_environment.bat
        cmd "/c export_environment.bat"
        set +x
        source ./exported_environment.sh
        set -x
        echo "::set-env name=PATH::${PATH}"
        echo "::set-env name=UniversalCRTSdkDir::${UniversalCRTSdkDir}"
        echo "::set-env name=UCRTVersion::${UCRTVersion}"
        echo "::set-env name=VCToolsInstallDir::${VCToolsInstallDir}"
    - name: Fetch WinSDK module maps
      shell: bash
      run: |
        set -x
        curl --location \
          'https://raw.githubusercontent.com/apple/swift/swift-5.2-RELEASE/stdlib/public/Platform/ucrt.modulemap' \
          --output "${UniversalCRTSdkDir}/Include/${UCRTVersion}/ucrt/module.modulemap"
        curl --location \
          'https://raw.githubusercontent.com/apple/swift/swift-5.2-RELEASE/stdlib/public/Platform/visualc.modulemap' \
          --output "${VCToolsInstallDir}/include/module.modulemap"
        curl --location \
          'https://raw.githubusercontent.com/apple/swift/swift-5.2-RELEASE/stdlib/public/Platform/visualc.apinotes' \
          --output "${VCToolsInstallDir}/include/visualc.apinotes"
        curl --location \
          'https://raw.githubusercontent.com/apple/swift/swift-5.2-RELEASE/stdlib/public/Platform/winsdk.modulemap' \
          --output "${UniversalCRTSdkDir}/Include/${UCRTVersion}/um/module.modulemap"
    - name: Install Swift
      shell: bash
      run: |
        set -x
        curl --location \
          'https://github.com/compnerd/swift-build/releases/download/v5.2/installer.exe' \
          --output "/tmp/installer.exe"
        /tmp/installer.exe
        swift --version
    - name: Fetch ICU
      shell: bash
      run: |
        set -x
        curl --location \
          'http://download.icu-project.org/files/icu4c/64.2/icu4c-64_2-Win64-MSVC2017.zip' \
          --output '/tmp/icu4c-64_2-Win64-MSVC2017.zip'
        cd /tmp
        7z x icu4c-64_2-Win64-MSVC2017.zip -oicu4c-64_2-Win64-MSVC2017
        mkdir -p /c/Library/ICU-64.2
        cp -R /tmp/icu4c-64_2-Win64-MSVC2017/* /c/Library/ICU-64.2
        mv /c/Library/ICU-64.2/bin64 /c/Library/ICU-64.2/bin
        export PATH="/c/Library/ICU-64.2/bin:${PATH}"
        echo "::set-env name=PATH::${PATH}"
    - name: Install Swift
      shell: bash
      run: |
        set -x
        curl --location \
          'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/toolchain-windows-x64.zip' \
          --output '/tmp/toolchain-windows-x64.zip'
        cd /tmp
        7z x toolchain-windows-x64.zip -o.
        mkdir -p /c
        cp -R /tmp/toolchain-windows-x64/* /c
        curl --location \
          'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/sdk-windows-x64.zip' \
          --output '/tmp/sdk-windows-x64.zip'
        cd /tmp
        7z x sdk-windows-x64.zip -o.
        mkdir -p /c
        cp -R /tmp/sdk-windows-x64/* /c
        export PATH="/c/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin:${PATH}"
        echo "::set-env name=PATH::${PATH}"
        mkdir -p /c/Library/Swift/Current/bin
        cp -R /c/Library/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr/bin/* /c/Library/Swift/Current/bin
        export PATH="/c/Library/Swift/Current/bin:${PATH}"
        echo "::set-env name=PATH::${PATH}"
        export PATH="/c/Library/Developer/Platforms/Windows.platform/Developer/Library/XCTest-development/usr/bin:${PATH}"
        echo "::set-env name=PATH::${PATH}"
        swift --version
    - name: Fetch dependencies
      shell: bash
      run: |
        set -x
        git clone https://github.com/SDGGiesbrecht/swift-cmark .build/SDG/Dependencies/CommonMark --branch 0.0.50100 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/SDGGiesbrecht/SDGCommandLine .build/SDG/Dependencies/SDGCommandLine --branch 1.3.2 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/SDGGiesbrecht/SDGCornerstone .build/SDG/Dependencies/SDGCornerstone --branch 4.5.0 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/SDGGiesbrecht/SDGSwift .build/SDG/Dependencies/SDGSwift --branch 0.20.1 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/SDGGiesbrecht/SDGWeb .build/SDG/Dependencies/SDGWeb --branch 5.1.2 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-package-manager .build/SDG/Dependencies/SwiftPM --branch 0.6.0 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-syntax .build/SDG/Dependencies/SwiftSyntax --branch 0.50200.0 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-llbuild.git .build/SDG/Dependencies/llbuild --branch 0.3.0 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-argument-parser.git .build/SDG/Dependencies/swift-argument-parser --branch 0.0.4 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-format .build/SDG/Dependencies/swift-format --branch 0.50200.0 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-numerics .build/SDG/Dependencies/swift-numerics --branch 0.0.5 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-tools-support-core.git .build/SDG/Dependencies/swift-tools-support-core --branch 0.1.0 --depth 1 --config advice.detachedHead=false
    - name: Build
      shell: bash
      run: |
        set -x
        export PATH=$(echo -n $PATH | awk -v RS=: -v ORS=: '!($0 in a) {a[$0]; print $0}')
        cmake -G Ninja -S .github/workflows/Windows -B .build/SDG/CMake -DCMAKE_Swift_FLAGS='-resource-dir C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift -I C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows\x86_64 -L C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift\windows -L C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows'
        cmake --build '.build/SDG/CMake'
    - name: Test
      shell: bash
      run: |
        set -x
        export PATH=$(echo -n $PATH | awk -v RS=: -v ORS=: '!($0 in a) {a[$0]; print $0}')
        cd .build/SDG/CMake
        ctest --verbose
