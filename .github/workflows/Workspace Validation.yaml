# Workspace Validation.yaml
#
# This source file is part of the Workspace open source project.
# Diese Quelldatei ist Teil des qeulloffenen Arbeitsbereich‐Projekt.
# https://github.com/SDGGiesbrecht/Workspace#workspace
#
# Copyright ©2019–2020 Jeremy David Giesbrecht and the Workspace project contributors.
# Urheberrecht ©2019–2020 Jeremy David Giesbrecht und die Mitwirkenden des Arbeitsbereich‐Projekts.
#
# Soli Deo gloria.
#
# Licensed under the Apache Licence, Version 2.0.
# See http://www.apache.org/licenses/LICENSE-2.0 for licence information.

name: Workspace Validation

on: [push, pull_request]

jobs:
  #Android_Build:
  #  runs-on: ubuntu-18.04
  #  steps:
  #  - uses: actions/checkout@v1
  #  - uses: actions/cache@v1
  #    with:
  #      key: Android‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
  #      path: .build/SDG/Workspace
  #  - name: Validate
  #    run: |
  #      echo 'Fetching Swift...'
  #      repository_directory=$(pwd)
  #      mkdir -p .build/SDG/Swift
  #      cd .build/SDG/Swift
  #      curl -o Swift.tar.gz 'https://swift.org/builds/swift-5.1.1-release/ubuntu1804/swift-5.1.1-RELEASE/swift-5.1.1-RELEASE-ubuntu18.04.tar.gz'
  #      tar --extract --file Swift.tar.gz
  #      sudo cp -R swift-5.1.1-RELEASE-ubuntu18.04/usr/* /usr/
  #      cd "${repository_directory}"
  #      swift --version

  #      echo 'Fetching Swift cross‐compilation toolchain...'
  #      mkdir -p .build/SDG/Experimental_Swift
  #      cd .build/SDG/Experimental_Swift
  #      curl -o swift-build.py 'https://raw.githubusercontent.com/compnerd/swift-build/master/utilities/swift-build.py'
  #      python -m pip install --user azure-devops tabulate
  #      echo 'Downloading... (This could take up to 10 minutes.)'
  #      python swift-build.py --build-id 'Ubuntu 18.04 (flowkey)' --latest-artifacts --filter toolchain-linux-x64 --download > /dev/null
  #      unzip toolchain-linux-x64.zip
  #      sudo mv toolchain-linux-x64/Library /Library
  #      chmod -R a+rwx /Library
  #      cd "${repository_directory}"
  #      /Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin/swift --version

  #      echo 'Fetching Swift Android SDK...'
  #      cd .build/SDG/Experimental_Swift
  #      python swift-build.py --build-id 'VS2019' --latest-artifacts --filter sdk-android-x86 --download > /dev/null
  #      unzip sdk-android-x86.zip
  #      mv sdk-android-x86/Library/Developer/Platforms /Library/Developer/Platforms
  #      sed -i -e s~C:/Microsoft/AndroidNDK64/android-ndk-r16b~${ANDROID_HOME}/ndk-bundle~g /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/i686/glibc.modulemap
  #      cp -R "${ANDROID_HOME}/ndk-bundle/platforms/android-29/arch-x86/"* /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk
  #      cd "${repository_directory}"

  #      echo 'Building Workspace...'
  #      export TARGETING_ANDROID=true
  #      swift build --destination .github/workflows/Android/SDK.json \
  #        --build-tests --enable-test-discovery \
  #        -Xswiftc -resource-dir -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift \
  #        -Xswiftc -tools-directory -Xswiftc ${ANDROID_HOME}/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin \
  #        -Xswiftc -Xclang-linker -Xswiftc --gcc-toolchain=${ANDROID_HOME}/ndk-bundle/toolchains/x86-4.9/prebuilt/linux-x86_64 \
  #        -Xcc -I${ANDROID_HOME}/ndk-bundle/sysroot/usr/include \
  #        -Xcc -I${ANDROID_HOME}/ndk-bundle/sysroot/usr/include/i686-linux-android \
  #        -Xswiftc -I -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android/i686 \
  #        -Xswiftc -L -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android \
  #        -Xswiftc -Xclang-linker -Xswiftc -fuse-ld=lld
  #  - uses: actions/upload-artifact@v1
  #    with:
  #      name: products
  #      path: .build/i686-unknown-linux-android/debug
  Android_Test:
    runs-on: macos-latest
  #  needs: Android_Build
    steps:
    - uses: actions/checkout@v1
  #  - uses: actions/download-artifact@v1
  #    with:
  #      name: products
  #      path: .build
    - uses: malinskiy/action-android/install-sdk@release/0.0.5
    - uses: malinskiy/action-android/emulator-run-cmd@release/0.0.5
      with:
        abi: x86
        # /Users/runner/android-sdk/platform-tools/adb push /data/local/.build .build
        # cd /data/local/.build
        # /Users/runner/android-sdk/platform-tools/adb -e shell /data/local/.build/WorkspacePackageTests.xctest
        cmd: |
          pwd
          ls
