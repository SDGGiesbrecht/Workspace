# Workspace Validation.yaml
#
# This source file is part of the Workspace open source project.
# Diese Quelldatei ist Teil des qeulloffenen Arbeitsbereich‐Projekt.
# https://github.com/SDGGiesbrecht/Workspace#workspace
#
# Copyright ©2019–2020 Jeremy David Giesbrecht and the Workspace project contributors.
# Urheberrecht ©2019–2020 Jeremy David Giesbrecht und die Mitwirkenden des Arbeitsbereich‐Projekts.
#
# Soli Deo gloria.
#
# Licensed under the Apache Licence, Version 2.0.
# See http://www.apache.org/licenses/LICENSE-2.0 for licence information.

name: Workspace Validation

on: [push, pull_request]

jobs:
  macOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        './Validate (macOS).command' •job macos •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
  Windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Windows‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      shell: bash
      run: |
        echo 'Setting up Visual Studio... (in order to proceed as though in the Native Tools Command Prompt)'
        repository_directory=$(pwd)
        cd '/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build'
        echo 'export -p > exported_environment.sh' > nested_bash.sh
        echo 'vcvarsall.bat x64 && "C:/Program Files/Git/usr/bin/bash" -c ./nested_bash.sh' > export_environment.bat
        cmd "/c export_environment.bat"
        source ./exported_environment.sh
        if [ -z "$INCLUDE" ]; then echo 'Failed to set up Visual Studio.'; exit 1; fi
        cd "${repository_directory}"

        echo 'Fetching Windows platform module maps...'
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/ucrt.modulemap' -o "${UniversalCRTSdkDir}/Include/${UCRTVersion}/ucrt/module.modulemap"
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/visualc.modulemap' -o "${VCToolsInstallDir}/include/module.modulemap"
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/visualc.apinotes' -o "${VCToolsInstallDir}/include/visualc.apinotes"
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/winsdk.modulemap' -o "${UniversalCRTSdkDir}/Include/${UCRTVersion}/um/module.modulemap"

        echo 'Fetching Swift...'
        mkdir -p .build/SDG/Experimental_Swift
        cd .build/SDG/Experimental_Swift
        curl -o swift-build.py 'https://raw.githubusercontent.com/compnerd/swift-build/master/utilities/swift-build.py'
        python -m pip install --user azure-devops tabulate
        echo 'Downloading... (This could take up to 10 minutes.)'
        python swift-build.py --build-id 'VS2019 Swift 5.2' --latest-artifacts --filter windows-x64 --download > /dev/null
        7z x toolchain-windows-x64.zip
        mv toolchain-windows-x64/Library /c/Library
        7z x sdk-windows-x64.zip
        mv sdk-windows-x64/Library/Developer/Platforms /c/Library/Developer/Platforms
        cd "${repository_directory}"
        export PATH="/c/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin:${PATH}"
        mkdir -p /c/Library/Swift/Current
        cp -R /c/Library/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr/bin /c/Library/Swift/Current/bin
        cp -R /c/Library/Developer/Platforms/Windows.platform/Developer/Library/XCTest-development/usr/bin/* /c/Library/Swift/Current/bin
        export PATH="/c/Library/Swift/Current/bin:${PATH}"
        swift --version

        echo 'Fetching ICU...'
        mkdir -p .build/SDG/ICU
        cd .build/SDG/ICU
        curl -L http://download.icu-project.org/files/icu4c/64.2/icu4c-64_2-Win64-MSVC2017.zip --output ICU.zip
        7z x ICU.zip -oICU-64.2
        mv ICU-64.2 /c/Library/ICU-64.2
        mv /c/Library/ICU-64.2/bin64 /c/Library/ICU-64.2/bin
        export PATH="/c/Library/ICU-64.2/bin:${PATH}"
        cd "${repository_directory}"

        echo 'Fetching package graph...'
        git clone https://github.com/SDGGiesbrecht/swift-cmark .build/SDG/Dependencies/CommonMark --branch 0.0.50100 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/SDGGiesbrecht/SDGCornerstone .build/SDG/Dependencies/SDGCornerstone --branch 4.2.1 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/SDGGiesbrecht/SDGSwift .build/SDG/Dependencies/SDGSwift --branch 0.19.1 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/SDGGiesbrecht/SDGWeb .build/SDG/Dependencies/SDGWeb --branch 5.0.1 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-package-manager .build/SDG/Dependencies/SwiftPM --branch 0.5.0 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-syntax .build/SDG/Dependencies/SwiftSyntax --branch 0.50100.0 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-llbuild.git .build/SDG/Dependencies/llbuild --branch 0.2.0 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/SDGGiesbrecht/swift-format .build/SDG/Dependencies/swift-format --branch 0.0.50100 --depth 1 --config advice.detachedHead=false
        git clone https://github.com/apple/swift-numerics .build/SDG/Dependencies/swift-numerics --branch 0.0.4 --depth 1 --config advice.detachedHead=false

        echo 'Building Workspace...'
        cmake -G Ninja -S .github/workflows/Windows -B .build/SDG/CMake -DCMAKE_Swift_FLAGS='-resource-dir C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift -L C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift\windows -I C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows\x86_64 -L C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows' -DCMAKE_Swift_LINK_FLAGS='-resource-dir C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift -L C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift\windows -I C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows\x86_64 -L C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows'
        cmake --build '.build/SDG/CMake'
        echo 'Testing Workspace...'
        cd .build/SDG/CMake
        ctest --verbose
  Linux:
    runs-on: ubuntu-18.04
    container: swift:5.1.3-bionic
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Linux‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        apt-get update
        apt-get install --assume-yes curl libsqlite3-dev libncurses-dev
        './Refresh (macOS).command' •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        './Validate (macOS).command' •job linux •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        chmod -R a+rwx .
  tvOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        swift run test‐tvos‐simulator •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
  iOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        swift run test‐ios‐simulator •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
  Miscellaneous:
    runs-on: ubuntu-18.04
    container: swift:5.1.3-bionic
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Linux‐${{ hashFiles('Refresh*') }}‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        apt-get update
        apt-get install --assume-yes curl libsqlite3-dev libncurses-dev
        './Refresh (macOS).command' •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        './Validate (macOS).command' •job miscellaneous •language '🇬🇧EN;🇺🇸EN;🇨🇦EN;🇩🇪DE'
        chmod -R a+rwx .
