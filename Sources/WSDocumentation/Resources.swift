/*
 Resources.swift

 This source file is part of the Workspace open source project.
 https://github.com/SDGGiesbrecht/Workspace#workspace

 Copyright ©2018–2019 Jeremy David Giesbrecht and the Workspace project contributors.

 Soli Deo gloria.

 Licensed under the Apache Licence, Version 2.0.
 See http://www.apache.org/licenses/LICENSE-2.0 for licence information.
 */

import Foundation

internal enum Resources {}

extension Resources {
    static let page = String(data: Data(base64Encoded: "PCFET0NUWVBFIGh0bWw+Cgo8IS0tCiBQYWdlLmh0bWwKCiBUaGlzIHNvdXJjZSBmaWxlIGlzIHBhcnQgb2YgdGhlIFdvcmtzcGFjZSBvcGVuIHNvdXJjZSBwcm9qZWN0LgogaHR0cHM6Ly9naXRodWIuY29tL1NER0dpZXNicmVjaHQvV29ya3NwYWNlI3dvcmtzcGFjZQoKIENvcHlyaWdodCDCqTIwMTjigJMyMDE5IEplcmVteSBEYXZpZCBHaWVzYnJlY2h0IGFuZCB0aGUgV29ya3NwYWNlIHByb2plY3QgY29udHJpYnV0b3JzLgoKIFNvbGkgRGVvIGdsb3JpYS4KCiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2VuY2UsIFZlcnNpb24gMi4wLgogU2VlIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMCBmb3IgbGljZW5jZSBpbmZvcm1hdGlvbi4KIC0tPgoKPGh0bWwgZGlyPSJbKnRleHQgZGlyZWN0aW9uKl0iIGxhbmc9IlsqbG9jYWxpemF0aW9uKl0iPgogPGhlYWQ+CiAgPG1ldGEgY2hhcnNldD0idXRmJiN4MDAyRDs4Ij4KICA8dGl0bGU+Wyp0aXRsZSpdPC90aXRsZT4KICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ilsqc2l0ZSByb290Kl1DU1MvUm9vdC5jc3MiPgogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iWypzaXRlIHJvb3QqXUNTUy9Td2lmdC5jc3MiPgogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iWypzaXRlIHJvb3QqXUNTUy9TaXRlLmNzcyI+CiAgPHNjcmlwdCBzcmM9Ilsqc2l0ZSByb290Kl1KYXZhU2NyaXB0L1NpdGUuanMiPjwvc2NyaXB0PgogPC9oZWFkPgogPGJvZHk+CiAgPGhlYWRlciBjbGFzcz0ibmF2aWdhdGlvbuKAkGJhciI+CiAgIDxuYXYgY2xhc3M9Im5hdmlnYXRpb27igJBiYXIiPgogICAgPGRpdiBjbGFzcz0ibmF2aWdhdGlvbuKAkHBhdGgiIGRpcj0iWyp0ZXh0IGRpcmVjdGlvbipdIj4KClsqbmF2aWdhdGlvbiBwYXRoKl0KCiAgICA8L2Rpdj4KICAgIDxkaXY+CiAgICAgWypwYWNrYWdlIGltcG9ydCpdCiAgICA8L2Rpdj4KICAgPC9uYXY+CiAgPC9oZWFkZXI+CiAgPGRpdiBjbGFzcz0iY29udGVudOKAkGNvbnRhaW5lciI+CiAgIDxoZWFkZXIgY2xhc3M9ImluZGV4Ij4KICAgIDxuYXYgY2xhc3M9ImluZGV4Ij4KClsqaW5kZXgqXQoKICAgIDwvbmF2PgogICA8L2hlYWRlcj4KICAgPG1haW4+CgpbKmltcG9ydHMqXQoKICAgIDxkaXYgY2xhc3M9Im1haW7igJB0ZXh04oCQY29sdW1uIj4KICAgICA8ZGl2IGNsYXNzPSJ0aXRsZSI+CiAgICAgIFsqc3ltYm9sIHR5cGUqXQogICAgICBbKmNvbXBpbGF0aW9uIGNvbmRpdGlvbnMqXQogICAgICA8aDE+Wyp0aXRsZSpdPC9oMT4KICAgICAgWypjb25zdHJhaW50cypdCiAgICAgPC9kaXY+CgpbKmNvbnRlbnQqXQoKICAgIDwvZGl2PgoKWypleHRlbnNpb25zKl0KCiAgIDwvbWFpbj4KICAgPGhlYWRlciBjbGFzcz0icGxhdGZvcm1zIj4KWypwbGF0Zm9ybXMqXQogICA8L2hlYWRlcj4KICA8L2Rpdj4KICA8Zm9vdGVyIGRpcj0iWyp0ZXh0IGRpcmVjdGlvbipdIj4KICAgWypjb3B5cmlnaHQqXQogICBbKndvcmtzcGFjZSpdCiAgPC9mb290ZXI+CiAgPHNjcmlwdD5jb250cmFjdEluZGV4KCk7PC9zY3JpcHQ+CiA8L2JvZHk+CjwvaHRtbD4K")!, encoding: String.Encoding.utf8)!
    static let script = String(data: Data(base64Encoded: "LyoKIFNjcmlwdC5qcwoKIFRoaXMgc291cmNlIGZpbGUgaXMgcGFydCBvZiB0aGUgV29ya3NwYWNlIG9wZW4gc291cmNlIHByb2plY3QuCiBodHRwczovL2dpdGh1Yi5jb20vU0RHR2llc2JyZWNodC9Xb3Jrc3BhY2Ujd29ya3NwYWNlCgogQ29weXJpZ2h0IMKpMjAxOOKAkzIwMTkgSmVyZW15IERhdmlkIEdpZXNicmVjaHQgYW5kIHRoZSBXb3Jrc3BhY2UgcHJvamVjdCBjb250cmlidXRvcnMuCgogU29saSBEZW8gZ2xvcmlhLgoKIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5jZSwgVmVyc2lvbiAyLjAuCiBTZWUgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wIGZvciBsaWNlbmNlIGluZm9ybWF0aW9uLgogKi8KCmZ1bmN0aW9uIGhpZGVFbGVtZW50KGVsZW1lbnQpIHsKICAgIGVsZW1lbnQuc3R5bGVbInBhZGRpbmctdG9wIl0gPSAwOwogICAgZWxlbWVudC5zdHlsZVsicGFkZGluZy1ib3R0b20iXSA9IDA7CiAgICBlbGVtZW50LnN0eWxlLmhlaWdodCA9IDA7CiAgICBlbGVtZW50LnN0eWxlWyJvdmVyZmxvdyJdID0gImhpZGRlbiI7Cn0KCmZ1bmN0aW9uIHVuaGlkZUVsZW1lbnQoZWxlbWVudCkgewogICAgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoInN0eWxlIik7Cn0KCmZ1bmN0aW9uIHRvZ2dsZUxpbmtWaXNpYmlsaXR5KGxpbmspIHsKICAgIGlmIChsaW5rLmhhc0F0dHJpYnV0ZSgic3R5bGUiKSkgewogICAgICAgIHVuaGlkZUVsZW1lbnQobGluayk7CiAgICB9IGVsc2UgewogICAgICAgIGhpZGVFbGVtZW50KGxpbmspOwogICAgfQp9CgpmdW5jdGlvbiB0b2dnbGVJbmRleFNlY3Rpb25WaXNpYmlsaXR5KHNlbmRlcikgewogICAgdmFyIHNlY3Rpb24gPSBzZW5kZXIucGFyZW50RWxlbWVudDsKICAgIHZhciBsaW5rcyA9IHNlY3Rpb24uY2hpbGRyZW4KICAgIGZvciAodmFyIGxpbmtJbmRleCA9IDE7IGxpbmtJbmRleCA8IGxpbmtzLmxlbmd0aDsgbGlua0luZGV4KyspIHsKICAgICAgICB2YXIgbGluayA9IGxpbmtzW2xpbmtJbmRleF0KICAgICAgICB0b2dnbGVMaW5rVmlzaWJpbGl0eShsaW5rKQogICAgfQp9CgpmdW5jdGlvbiBjb250cmFjdEluZGV4KCkgewogICAgdmFyIGluZGV4RWxlbWVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJpbmRleCIpOwogICAgdmFyIGluZGV4ID0gaW5kZXhFbGVtZW50cy5pdGVtKGluZGV4RWxlbWVudHMubGVuZ3RoIC0gMSk7CiAgICB2YXIgc2VjdGlvbnMgPSBpbmRleC5jaGlsZHJlbjsKICAgIGZvciAodmFyIHNlY3Rpb25JbmRleCA9IDE7IHNlY3Rpb25JbmRleCA8IHNlY3Rpb25zLmxlbmd0aDsgc2VjdGlvbkluZGV4KyspIHsKICAgICAgICB2YXIgc2VjdGlvbiA9IHNlY3Rpb25zW3NlY3Rpb25JbmRleF0KICAgICAgICB2YXIgbGlua3MgPSBzZWN0aW9uLmNoaWxkcmVuCiAgICAgICAgZm9yICh2YXIgbGlua0luZGV4ID0gMTsgbGlua0luZGV4IDwgbGlua3MubGVuZ3RoOyBsaW5rSW5kZXgrKykgewogICAgICAgICAgICB2YXIgbGluayA9IGxpbmtzW2xpbmtJbmRleF0KICAgICAgICAgICAgdG9nZ2xlTGlua1Zpc2liaWxpdHkobGluaykKICAgICAgICB9CiAgICB9Cn0KCmZ1bmN0aW9uIHN3aXRjaENvbmZvcm1hbmNlTW9kZShzZW5kZXIpIHsKICAgIHZhciBjaGlsZHJlbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImNoaWxkIik7CiAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgY2hpbGRyZW4ubGVuZ3RoOyArK2luZGV4KSB7CiAgICAgICAgbGV0IGNoaWxkID0gY2hpbGRyZW5baW5kZXhdOwogICAgICAgIGlmIChzZW5kZXIudmFsdWUgPT0gInJlcXVpcmVkIikgewogICAgICAgICAgICBpZiAoY2hpbGQuZ2V0QXR0cmlidXRlKCJkYXRhLWNvbmZvcm1hbmNlIikgPT0gInJlcXVpcmVtZW50IikgewogICAgICAgICAgICAgICAgdW5oaWRlRWxlbWVudChjaGlsZCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBoaWRlRWxlbWVudChjaGlsZCk7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKHNlbmRlci52YWx1ZSA9PSAiY3VzdG9taXphYmxlIikgewogICAgICAgICAgICBpZiAoY2hpbGQuZ2V0QXR0cmlidXRlKCJkYXRhLWNvbmZvcm1hbmNlIikgPT0gInJlcXVpcmVtZW50IgogICAgICAgICAgICAgICAgfHwgY2hpbGQuZ2V0QXR0cmlidXRlKCJkYXRhLWNvbmZvcm1hbmNlIikgPT0gImN1c3RvbWl6YWJsZSIpIHsKICAgICAgICAgICAgICAgIHVuaGlkZUVsZW1lbnQoY2hpbGQpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaGlkZUVsZW1lbnQoY2hpbGQpOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdW5oaWRlRWxlbWVudChjaGlsZCk7CiAgICAgICAgfQogICAgfQp9CgpmdW5jIHNob3dMYW5ndWFnZVN3aXRjaChzZW5kZXIpIHsKICAgIHZhciBwb3B1cCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlEKCJsYW5ndWFnZeKAkHN3aXRjaCIpOwogICAgcG9wdXAuc3R5bGVbImRpc3BsYXkiXSA9ICJibG9jayI7Cn0KCmZ1bmMgaGlkZUxhbmd1YWdlU3dpdGNoKHNlbmRlcikgewogICAgdmFyIHBvcHVwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SUQoImxhbmd1YWdl4oCQc3dpdGNoIik7CiAgICBwb3B1cC5zdHlsZVsiZGlzcGxheSJdID0gIm5vbmUiOwp9Cg==")!, encoding: String.Encoding.utf8)!
    static let site = String(data: Data(base64Encoded: "")!, encoding: String.Encoding.utf8)!

}
