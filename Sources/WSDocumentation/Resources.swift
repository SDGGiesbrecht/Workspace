/*
 Resources.swift

 This source file is part of the Workspace open source project.
 Diese Quelldatei ist Teil des qeulloffenen Arbeitsbereich‐Projekt.
 https://github.com/SDGGiesbrecht/Workspace#workspace

 Copyright ©2018–2019 Jeremy David Giesbrecht and the Workspace project contributors.
 Urheberrecht ©2018–2019 Jeremy David Giesbrecht und die Mitwirkenden des Arbeitsbereich‐Projekts.

 Soli Deo gloria.

 Licensed under the Apache Licence, Version 2.0.
 See http://www.apache.org/licenses/LICENSE-2.0 for licence information.
 */

import Foundation

internal enum Resources {}
internal typealias Ressourcen = Resources

extension Resources {
    static let page = String(
        data: Data(
            base64Encoded:
                "PCFET0NUWVBFIGh0bWw+Cgo8IS0tCiBQYWdlLmh0bWwKCiBUaGlzIHNvdXJjZSBmaWxlIGlzIHBhcnQgb2YgdGhlIFdvcmtzcGFjZSBvcGVuIHNvdXJjZSBwcm9qZWN0LgogRGllc2UgUXVlbGxkYXRlaSBpc3QgVGVpbCBkZXMgcWV1bGxvZmZlbmVuIEFyYmVpdHNiZXJlaWNo4oCQUHJvamVrdC4KIGh0dHBzOi8vZ2l0aHViLmNvbS9TREdHaWVzYnJlY2h0L1dvcmtzcGFjZSN3b3Jrc3BhY2UKCiBDb3B5cmlnaHQgwqkyMDE44oCTMjAxOSBKZXJlbXkgRGF2aWQgR2llc2JyZWNodCBhbmQgdGhlIFdvcmtzcGFjZSBwcm9qZWN0IGNvbnRyaWJ1dG9ycy4KIFVyaGViZXJyZWNodCDCqTIwMTjigJMyMDE5IEplcmVteSBEYXZpZCBHaWVzYnJlY2h0IHVuZCBkaWUgTWl0d2lya2VuZGVuIGRlcyBBcmJlaXRzYmVyZWljaOKAkFByb2pla3RzLgoKIFNvbGkgRGVvIGdsb3JpYS4KCiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2VuY2UsIFZlcnNpb24gMi4wLgogU2VlIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMCBmb3IgbGljZW5jZSBpbmZvcm1hdGlvbi4KIC0tPgoKPGh0bWwgZGlyPSJbKnRleHQgZGlyZWN0aW9uKl0iIGxhbmc9IlsqbG9jYWxpemF0aW9uKl0iPgogPGhlYWQ+CiAgPG1ldGEgY2hhcnNldD0idXRmJiN4MDAyRDs4Ij4KICA8dGl0bGU+Wyp0aXRsZSpdPC90aXRsZT4KICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ilsqc2l0ZSByb290Kl1DU1MvUm9vdC5jc3MiPgogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iWypzaXRlIHJvb3QqXUNTUy9Td2lmdC5jc3MiPgogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iWypzaXRlIHJvb3QqXUNTUy9TaXRlLmNzcyI+CiAgPHNjcmlwdCBzcmM9Ilsqc2l0ZSByb290Kl1KYXZhU2NyaXB0L1NpdGUuanMiPjwvc2NyaXB0PgogPC9oZWFkPgogPGJvZHk+CiAgPGhlYWRlciBjbGFzcz0ibmF2aWdhdGlvbuKAkGJhciI+CiAgIDxuYXYgY2xhc3M9Im5hdmlnYXRpb27igJBiYXIiPgogICAgPGRpdiBjbGFzcz0ibmF2aWdhdGlvbuKAkHBhdGgiIGRpcj0iWyp0ZXh0IGRpcmVjdGlvbipdIj4KClsqbmF2aWdhdGlvbiBwYXRoKl0KCiAgICA8L2Rpdj4KICAgIDxkaXY+CiAgICAgWypwYWNrYWdlIGltcG9ydCpdCiAgICA8L2Rpdj4KICAgPC9uYXY+CiAgPC9oZWFkZXI+CiAgPGRpdiBjbGFzcz0iY29udGVudOKAkGNvbnRhaW5lciI+CiAgIDxoZWFkZXIgY2xhc3M9ImluZGV4Ij4KICAgIDxuYXYgY2xhc3M9ImluZGV4Ij4KClsqaW5kZXgqXQoKICAgIDwvbmF2PgogICA8L2hlYWRlcj4KICAgPG1haW4+CgpbKmltcG9ydHMqXQoKICAgIDxkaXYgY2xhc3M9Im1haW7igJB0ZXh04oCQY29sdW1uIj4KICAgICA8ZGl2IGNsYXNzPSJ0aXRsZSI+CiAgICAgIFsqc3ltYm9sIHR5cGUqXQogICAgICBbKmNvbXBpbGF0aW9uIGNvbmRpdGlvbnMqXQogICAgICA8aDE+Wyp0aXRsZSpdPC9oMT4KICAgICAgWypjb25zdHJhaW50cypdCiAgICAgPC9kaXY+CgpbKmNvbnRlbnQqXQoKICAgIDwvZGl2PgoKWypleHRlbnNpb25zKl0KCiAgIDwvbWFpbj4KICAgPGhlYWRlciBjbGFzcz0icGxhdGZvcm1zIj4KWypwbGF0Zm9ybXMqXQogICA8L2hlYWRlcj4KICA8L2Rpdj4KICA8Zm9vdGVyIGRpcj0iWyp0ZXh0IGRpcmVjdGlvbipdIj4KICAgWypjb3B5cmlnaHQqXQogICBbKndvcmtzcGFjZSpdCiAgPC9mb290ZXI+CiAgPHNjcmlwdD5jb250cmFjdEluZGV4KCJbKnNlY3Rpb24gaWRlbnRpZmllcipdIik7PC9zY3JpcHQ+CiA8L2JvZHk+CjwvaHRtbD4K"
        )!, encoding: String.Encoding.utf8)!
    static let script = String(
        data: Data(
            base64Encoded:
                "LyoKIFNjcmlwdC5qcwoKIFRoaXMgc291cmNlIGZpbGUgaXMgcGFydCBvZiB0aGUgV29ya3NwYWNlIG9wZW4gc291cmNlIHByb2plY3QuCiBEaWVzZSBRdWVsbGRhdGVpIGlzdCBUZWlsIGRlcyBxZXVsbG9mZmVuZW4gQXJiZWl0c2JlcmVpY2jigJBQcm9qZWt0LgogaHR0cHM6Ly9naXRodWIuY29tL1NER0dpZXNicmVjaHQvV29ya3NwYWNlI3dvcmtzcGFjZQoKIENvcHlyaWdodCDCqTIwMTjigJMyMDE5IEplcmVteSBEYXZpZCBHaWVzYnJlY2h0IGFuZCB0aGUgV29ya3NwYWNlIHByb2plY3QgY29udHJpYnV0b3JzLgogVXJoZWJlcnJlY2h0IMKpMjAxOOKAkzIwMTkgSmVyZW15IERhdmlkIEdpZXNicmVjaHQgdW5kIGRpZSBNaXR3aXJrZW5kZW4gZGVzIEFyYmVpdHNiZXJlaWNo4oCQUHJvamVrdHMuCgogU29saSBEZW8gZ2xvcmlhLgoKIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5jZSwgVmVyc2lvbiAyLjAuCiBTZWUgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wIGZvciBsaWNlbmNlIGluZm9ybWF0aW9uLgogKi8KCmZ1bmN0aW9uIGhpZGVFbGVtZW50KGVsZW1lbnQpIHsKICAgIGVsZW1lbnQuc3R5bGVbInBhZGRpbmctdG9wIl0gPSAwOwogICAgZWxlbWVudC5zdHlsZVsicGFkZGluZy1ib3R0b20iXSA9IDA7CiAgICBlbGVtZW50LnN0eWxlLmhlaWdodCA9IDA7CiAgICBlbGVtZW50LnN0eWxlWyJvdmVyZmxvdyJdID0gImhpZGRlbiI7Cn0KCmZ1bmN0aW9uIHVuaGlkZUVsZW1lbnQoZWxlbWVudCkgewogICAgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoInN0eWxlIik7Cn0KCmZ1bmN0aW9uIHRvZ2dsZUxpbmtWaXNpYmlsaXR5KGxpbmspIHsKICAgIGlmIChsaW5rLmhhc0F0dHJpYnV0ZSgic3R5bGUiKSkgewogICAgICAgIHVuaGlkZUVsZW1lbnQobGluayk7CiAgICB9IGVsc2UgewogICAgICAgIGhpZGVFbGVtZW50KGxpbmspOwogICAgfQp9CgpmdW5jdGlvbiB0b2dnbGVJbmRleFNlY3Rpb25WaXNpYmlsaXR5KHNlbmRlcikgewogICAgdmFyIHNlY3Rpb24gPSBzZW5kZXIucGFyZW50RWxlbWVudDsKICAgIHZhciBsaW5rcyA9IHNlY3Rpb24uY2hpbGRyZW4KICAgIGZvciAodmFyIGxpbmtJbmRleCA9IDE7IGxpbmtJbmRleCA8IGxpbmtzLmxlbmd0aDsgbGlua0luZGV4KyspIHsKICAgICAgICB2YXIgbGluayA9IGxpbmtzW2xpbmtJbmRleF0KICAgICAgICB0b2dnbGVMaW5rVmlzaWJpbGl0eShsaW5rKQogICAgfQp9CgpmdW5jdGlvbiBjb250cmFjdEluZGV4KGN1cnJlbnRTZWN0aW9uKSB7CiAgICB2YXIgaW5kZXhFbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImluZGV4Iik7CiAgICB2YXIgaW5kZXggPSBpbmRleEVsZW1lbnRzLml0ZW0oaW5kZXhFbGVtZW50cy5sZW5ndGggLSAxKTsKICAgIHZhciBzZWN0aW9ucyA9IGluZGV4LmNoaWxkcmVuOwogICAgZm9yICh2YXIgc2VjdGlvbkluZGV4ID0gMTsgc2VjdGlvbkluZGV4IDwgc2VjdGlvbnMubGVuZ3RoOyBzZWN0aW9uSW5kZXgrKykgewogICAgICAgIHZhciBzZWN0aW9uID0gc2VjdGlvbnNbc2VjdGlvbkluZGV4XQogICAgICAgIGlmIChzZWN0aW9uLmdldEF0dHJpYnV0ZSgnaWQnKSAhPSBjdXJyZW50U2VjdGlvbikgewogICAgICAgICAgICB2YXIgbGlua3MgPSBzZWN0aW9uLmNoaWxkcmVuCiAgICAgICAgICAgIGZvciAodmFyIGxpbmtJbmRleCA9IDE7IGxpbmtJbmRleCA8IGxpbmtzLmxlbmd0aDsgbGlua0luZGV4KyspIHsKICAgICAgICAgICAgICAgIHZhciBsaW5rID0gbGlua3NbbGlua0luZGV4XQogICAgICAgICAgICAgICAgdG9nZ2xlTGlua1Zpc2liaWxpdHkobGluaykKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQoKZnVuY3Rpb24gc3dpdGNoQ29uZm9ybWFuY2VNb2RlKHNlbmRlcikgewogICAgdmFyIGNoaWxkcmVuID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiY2hpbGQiKTsKICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBjaGlsZHJlbi5sZW5ndGg7ICsraW5kZXgpIHsKICAgICAgICBsZXQgY2hpbGQgPSBjaGlsZHJlbltpbmRleF07CiAgICAgICAgaWYgKHNlbmRlci52YWx1ZSA9PSAicmVxdWlyZWQiKSB7CiAgICAgICAgICAgIGlmIChjaGlsZC5nZXRBdHRyaWJ1dGUoImRhdGEtY29uZm9ybWFuY2UiKSA9PSAicmVxdWlyZW1lbnQiKSB7CiAgICAgICAgICAgICAgICB1bmhpZGVFbGVtZW50KGNoaWxkKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGhpZGVFbGVtZW50KGNoaWxkKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoc2VuZGVyLnZhbHVlID09ICJjdXN0b21pemFibGUiKSB7CiAgICAgICAgICAgIGlmIChjaGlsZC5nZXRBdHRyaWJ1dGUoImRhdGEtY29uZm9ybWFuY2UiKSA9PSAicmVxdWlyZW1lbnQiCiAgICAgICAgICAgICAgICB8fCBjaGlsZC5nZXRBdHRyaWJ1dGUoImRhdGEtY29uZm9ybWFuY2UiKSA9PSAiY3VzdG9taXphYmxlIikgewogICAgICAgICAgICAgICAgdW5oaWRlRWxlbWVudChjaGlsZCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBoaWRlRWxlbWVudChjaGlsZCk7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB1bmhpZGVFbGVtZW50KGNoaWxkKTsKICAgICAgICB9CiAgICB9Cn0KCmZ1bmN0aW9uIHNob3dMYW5ndWFnZVN3aXRjaChzZW5kZXIpIHsKICAgIHZhciBwb3B1cCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJsYW5ndWFnZeKAkHN3aXRjaCIpOwogICAgcG9wdXAuc3R5bGVbImRpc3BsYXkiXSA9ICJibG9jayI7Cn0KCmZ1bmN0aW9uIGhpZGVMYW5ndWFnZVN3aXRjaChzZW5kZXIpIHsKICAgIHZhciBwb3B1cCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJsYW5ndWFnZeKAkHN3aXRjaCIpOwogICAgcG9wdXAuc3R5bGVbImRpc3BsYXkiXSA9ICJub25lIjsKfQo="
        )!, encoding: String.Encoding.utf8)!
    static let site = String(
        data: Data(
            base64Encoded:
                ""
        )!, encoding: String.Encoding.utf8)!

}
