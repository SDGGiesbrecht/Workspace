# Workspace Validation.yaml
#
#
# ¬©2020
#
# This software is subject to copyright law.
# It may not be used, copied, distributed or modified without first obtaining a private licence from the copyright holder(s).

name: Workspace Validation

on: [push, pull_request]

jobs:
  macOS:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' ‚Ä¢language 'üáÆüá±◊¢◊ë'
        './Validate (macOS).command' ‚Ä¢job macos ‚Ä¢language 'üáÆüá±◊¢◊ë'
  Windows:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Windows‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      shell: bash
      run: |
        echo 'Setting up Visual Studio... (in order to proceed as though in the Native Tools Command Prompt)'
        repository_directory=$(pwd)
        cd '/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build'
        echo 'export -p > exported_environment.sh' > nested_bash.sh
        echo 'vcvarsall.bat x64 && "C:/Program Files/Git/usr/bin/bash" -c ./nested_bash.sh' > export_environment.bat
        cmd "/c export_environment.bat"
        source ./exported_environment.sh
        if [ -z "$INCLUDE" ]; then echo 'Failed to set up Visual Studio.'; exit 1; fi
        cd "${repository_directory}"

        echo 'Fetching Windows platform module maps...'
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/ucrt.modulemap' -o "${UniversalCRTSdkDir}/Include/${UCRTVersion}/ucrt/module.modulemap"
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/visualc.modulemap' -o "${VCToolsInstallDir}/include/module.modulemap"
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/visualc.apinotes' -o "${VCToolsInstallDir}/include/visualc.apinotes"
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/winsdk.modulemap' -o "${UniversalCRTSdkDir}/Include/${UCRTVersion}/um/module.modulemap"

        echo 'Fetching Swift...'
        mkdir -p .build/SDG/Experimental_Swift
        cd .build/SDG/Experimental_Swift
        curl -L -o toolchain-windows-x64.zip 'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/toolchain-windows-x64.zip'
        curl -L -o sdk-windows-x64.zip 'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/sdk-windows-x64.zip'
        7z x toolchain-windows-x64.zip
        mv toolchain-windows-x64/Library /c/Library
        7z x sdk-windows-x64.zip
        mv sdk-windows-x64/Library/Developer/Platforms /c/Library/Developer/Platforms
        cd "${repository_directory}"
        export PATH="/c/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin:${PATH}"
        mkdir -p /c/Library/Swift/Current
        cp -R /c/Library/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr/bin /c/Library/Swift/Current/bin
        export PATH="/c/Library/Swift/Current/bin:${PATH}"
        export PATH="/c/Library/Developer/Platforms/Windows.platform/Developer/Library/XCTest-development/usr/bin:${PATH}"
        swift --version

        echo 'Fetching ICU...'
        mkdir -p .build/SDG/ICU
        cd .build/SDG/ICU
        curl -L http://download.icu-project.org/files/icu4c/64.2/icu4c-64_2-Win64-MSVC2017.zip --output ICU.zip
        7z x ICU.zip -oICU-64.2
        mv ICU-64.2 /c/Library/ICU-64.2
        mv /c/Library/ICU-64.2/bin64 /c/Library/ICU-64.2/bin
        export PATH="/c/Library/ICU-64.2/bin:${PATH}"
        cd "${repository_directory}"

        echo 'Fetching package graph...'

        echo 'Building AllTasks...'
        cmake -G Ninja -S .github/workflows/Windows -B .build/SDG/CMake -DCMAKE_Swift_FLAGS='-resource-dir C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift -I C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows\x86_64 -L C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift\windows -L C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows'
        cmake --build '.build/SDG/CMake'
        echo 'Testing AllTasks...'
        cd .build/SDG/CMake
        ctest --verbose
  Linux:
    runs-on: ubuntu-18.04
    container: swift:5.1.3-bionic
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Linux‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        apt-get update
        apt-get install --assume-yes curl libsqlite3-dev libncurses-dev
        './Refresh (macOS).command' ‚Ä¢language 'üáÆüá±◊¢◊ë'
        './Validate (macOS).command' ‚Ä¢job linux ‚Ä¢language 'üáÆüá±◊¢◊ë'
        chmod -R a+rwx .
  tvOS:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' ‚Ä¢language 'üáÆüá±◊¢◊ë'
        './Validate (macOS).command' ‚Ä¢job tvos ‚Ä¢language 'üáÆüá±◊¢◊ë'
  iOS:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' ‚Ä¢language 'üáÆüá±◊¢◊ë'
        './Validate (macOS).command' ‚Ä¢job ios ‚Ä¢language 'üáÆüá±◊¢◊ë'
  Android:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Android‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        echo 'Fetching Swift...'
        repository_directory=$(pwd)
        mkdir -p .build/SDG/Swift
        cd .build/SDG/Swift
        curl -o Swift.tar.gz 'https://swift.org/builds/swift-5.1.1-release/ubuntu1804/swift-5.1.1-RELEASE/swift-5.1.1-RELEASE-ubuntu18.04.tar.gz'
        tar --extract --file Swift.tar.gz
        sudo cp -R swift-5.1.1-RELEASE-ubuntu18.04/usr/* /usr/
        cd "${repository_directory}"
        swift --version

        echo 'Fetching Swift cross‚Äêcompilation toolchain...'
        mkdir -p .build/SDG/Experimental_Swift
        cd .build/SDG/Experimental_Swift
        curl -L -o toolchain-linux-x64.zip 'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/toolchain-linux-x64.zip'
        unzip toolchain-linux-x64.zip
        sudo mv toolchain-linux-x64/Library /Library
        chmod -R a+rwx /Library
        cd "${repository_directory}"
        /Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin/swift --version

        echo 'Fetching Swift Android SDK...'
        cd .build/SDG/Experimental_Swift
        curl -L -o sdk-android-x64.zip 'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/sdk-android-x64.zip'
        unzip sdk-android-x64.zip
        mv sdk-android-x64/Library/Developer/Platforms /Library/Developer/Platforms
        sed -i -e s~C:/Microsoft/AndroidNDK64/android-ndk-r16b~${ANDROID_HOME}/ndk-bundle~g /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/x86_64/glibc.modulemap
        sudo apt-get update --yes
        sudo apt-get install --yes patchelf
        patchelf --replace-needed lib/swift/android/x86_64/libswiftCore.so libswiftCore.so /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/libswiftSwiftOnoneSupport.so
        patchelf --replace-needed lib/swift/android/x86_64/libswiftCore.so libswiftCore.so /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/libswiftGlibc.so
        cp -R "${ANDROID_HOME}/ndk-bundle/platforms/android-29/arch-x86_64/"* /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk
        cd "${repository_directory}"

        echo 'Fetching ICU...'
        cd .build/SDG/Experimental_Swift
        curl -L -o icu-android-x64.zip 'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/icu-android-x64.zip'
        unzip icu-android-x64.zip
        mv icu-android-x64/Library/icu-64 /Library/icu-64
        curl -L -o libicudt64.so 'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/libicudt64.so'
        mv libicudt64.so /Library/icu-64/usr/lib/libicudt64.so
        cd "${repository_directory}"

        echo 'Building AllTasks...'
        export TARGETING_ANDROID=true
        swift build --destination .github/workflows/Android/SDK.json \
          --build-tests --enable-test-discovery \
          -Xswiftc -resource-dir -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift \
          -Xswiftc -tools-directory -Xswiftc ${ANDROID_HOME}/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin \
          -Xswiftc -Xclang-linker -Xswiftc --gcc-toolchain=${ANDROID_HOME}/ndk-bundle/toolchains/x86_64-4.9/prebuilt/linux-x86_64 \
          -Xcc -I${ANDROID_HOME}/ndk-bundle/sysroot/usr/include \
          -Xcc -I${ANDROID_HOME}/ndk-bundle/sysroot/usr/include/x86_64-linux-android \
          -Xswiftc -I -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android/x86_64 \
          -Xswiftc -L -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android

        echo 'Copying libraries...'
        cp -R "${ANDROID_HOME}/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/x86_64/"* .build/x86_64-unknown-linux-android/debug
        cp -R /Library/icu-64/usr/lib/* .build/x86_64-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/* .build/x86_64-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android/* .build/x86_64-unknown-linux-android/debug
    - uses: actions/upload-artifact@v1
      with:
        name: products
        path: .build/x86_64-unknown-linux-android/debug
  AndroidII:
    runs-on: macos-10.15
    needs: Android
    steps:
    - uses: actions/checkout@v1
    - uses: actions/download-artifact@v1
      with:
        name: products
        path: .build/x86_64-unknown-linux-android/debug
    - run: |
        mkdir -p .build/SDG
        echo '
        set -e
        adb -e push .build/x86_64-unknown-linux-android/debug /data/local/tmp/SDG/.build/x86_64-unknown-linux-android/debug
        adb -e shell chmod -R +x /data/local/tmp/SDG/.build/x86_64-unknown-linux-android/debug
        adb -e shell LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/data/local/tmp/SDG/.build/x86_64-unknown-linux-android/debug /data/local/tmp/SDG/.build/x86_64-unknown-linux-android/debug/AllTasksPackageTests.xctest
        ' > .build/SDG/Emulator.sh
        chmod +x .build/SDG/Emulator.sh
    - uses: malinskiy/action-android/install-sdk@release/0.0.5
    - uses: malinskiy/action-android/emulator-run-cmd@release/0.0.5
      with:
        abi: x86_64
        cmd: .build/SDG/Emulator.sh
  watchOS:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' ‚Ä¢language 'üáÆüá±◊¢◊ë'
        './Validate (macOS).command' ‚Ä¢job watchos ‚Ä¢language 'üáÆüá±◊¢◊ë'
  Miscellaneous:
    runs-on: ubuntu-18.04
    container: swift:5.1.3-bionic
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Linux‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        apt-get update
        apt-get install --assume-yes curl libsqlite3-dev libncurses-dev
        './Refresh (macOS).command' ‚Ä¢language 'üáÆüá±◊¢◊ë'
        './Validate (macOS).command' ‚Ä¢job miscellaneous ‚Ä¢language 'üáÆüá±◊¢◊ë'
        chmod -R a+rwx .
