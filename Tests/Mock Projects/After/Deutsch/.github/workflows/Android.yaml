

name: Android

on: [push, pull_request]

jobs:
  Android:
    name: Android
    runs-on: ubuntu-20.04
    steps:
    - name: Holen
      uses: actions/checkout@v2
    - name: Arbeitsbereich zwischenspeichern
      uses: actions/cache@v2
      with:
        key: Android‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Android‐NDK holen
      shell: bash
      run: |
        set -x
        curl \
          'https://dl.google.com/android/repository/android-ndk-r25b-linux.zip' \
          --output '/tmp/android-ndk-r25b-linux.zip' \
          --location
        unzip /tmp/android-ndk-r25b-linux.zip -d /tmp
        rm -rf ${ANDROID_HOME}/ndk-bundle
        sudo mkdir -p ${ANDROID_HOME}/ndk-bundle
        sudo cp -R /tmp/android-ndk-r25b/* ${ANDROID_HOME}/ndk-bundle
    - name: Swift installieren
      shell: bash
      run: |
        set -x
        sudo rm -rf /usr/lib/clang/10.0.0
        sudo rm -rf /usr/lib/python3/dist-packages/lldb
        curl \
          'https://download.swift.org/swift-5.8-release/ubuntu2004/swift-5.8-RELEASE/swift-5.8-RELEASE-ubuntu20.04.tar.gz' \
          --output '/tmp/swift-5.8-RELEASE-ubuntu20.04.tar.gz' \
          --location
        tar --extract \
          --file /tmp/swift-5.8-RELEASE-ubuntu20.04.tar.gz \
          --directory /tmp \
          --verbose
        sudo mkdir -p /
        sudo cp -R /tmp/swift-5.8-RELEASE-ubuntu20.04/* /
        export PATH="/usr/bin:${PATH}"
        echo "PATH=${PATH}" >> $GITHUB_ENV
        swift --version
    - name: Android‐Entwicklungsausrüstung holen
      shell: bash
      run: |
        set -x
        curl \
          'https://github.com/buttaface/swift-android-sdk/releases/download/5.8/swift-5.8-android-24-sdk.tar.xz' \
          --output '/tmp/swift-5.8-android-24-sdk.tar.xz' \
          --location
        tar --extract \
          --file /tmp/swift-5.8-android-24-sdk.tar.xz \
          --directory /tmp \
          --verbose
        sudo mkdir -p /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk
        sudo cp -R /tmp/swift-5.8-android-24-sdk/* /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk
        sudo chmod -R a+rwx /Library
        ln \
          /usr/lib/clang/13.0.0 \
          /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/clang \
          --symbolic \
          --force
    - name: Erstellen
      shell: bash
      run: |
        set -x
        export TARGETING_ANDROID=true
        swift build --triple x86_64-unknown-linux-android24 \
          --build-tests \
          --sdk ${ANDROID_HOME}/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/sysroot \
          -Xswiftc -resource-dir -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift \
          -Xswiftc -tools-directory -Xswiftc ${ANDROID_HOME}/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin \
          -Xcc -fPIC \
          -Xcc -lstdc++
    - name: Bibliotheken kopieren
      shell: bash
      run: |
        set -x
        mkdir -p .build/x86_64-unknown-linux-android24/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/*.so .build/x86_64-unknown-linux-android24/debug
        mkdir -p .build/x86_64-unknown-linux-android24/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/*.so .build/x86_64-unknown-linux-android24/debug
    - name: Teste hochladen
      uses: actions/upload-artifact@v2
      with:
        name: tests
        path: .build/x86_64-unknown-linux-android24/debug
  Android_II:
    name: Android II
    runs-on: macos-12
    needs: Android
    steps:
    - name: Holen
      uses: actions/checkout@v2
    - name: Teste herunterladen
      uses: actions/download-artifact@v2
      with:
        name: tests
        path: .build/x86_64-unknown-linux-android24/debug
    - name: Testen
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 24
        arch: x86_64
        script: |
          adb -e push . /data/local/tmp/Package
          adb -e shell 'chmod -R +x /data/local/tmp/Package/.build/x86_64-unknown-linux-android24/debug'
          adb -e shell 'LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/data/local/tmp/Package/.build/x86_64-unknown-linux-android24/debug HOME=/data/local/tmp/Home SWIFTPM_PACKAGE_ROOT=/data/local/tmp/Package /data/local/tmp/Package/.build/x86_64-unknown-linux-android24/debug/DeutschPackageTests.xctest'
