

name: Dokumentationsverteilung

on:
  push:
    branches:
      - master

jobs:
  Verteilung:
    runs-on: ubuntu-18.04
    container: swift:5.2.1-bionic
    steps:
    - name: Holen
      uses: actions/checkout@v1
    - name: Arbeitsbereich zwischenspeichern
      uses: actions/cache@v1
      with:
        key: Linux‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: SwiftPM‐Abhängigkeiten installieren
      shell: bash
      run: |
        set -x
        apt-get update --assume-yes
        apt-get install --assume-yes libsqlite3-dev libncurses-dev
    - name: cURL installieren
      shell: bash
      run: |
        set -x
        apt-get update --assume-yes
        apt-get install --assume-yes curl
    - name: Arbeitsbereich installieren
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Systeminstallation von Arbeitsbereich wird verwendet ..."
            workspace version •language '🇩🇪DE' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Lagerzwischenspeicher von Arbeitsbereich wird verwendet ..."
            .build/SDG/Workspace/workspace version •language '🇩🇪DE' •use‐version [Current Version]
        else
            echo "Keinen Zwischenspeicher gefunden; Arbeitsbereich wird geholt ..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace version •language '🇩🇪DE' •use‐version [Current Version]
        fi
    - name: Auffrischen
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Systeminstallation von Arbeitsbereich wird verwendet ..."
            workspace refresh •language '🇩🇪DE' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Lagerzwischenspeicher von Arbeitsbereich wird verwendet ..."
            .build/SDG/Workspace/workspace refresh •language '🇩🇪DE' •use‐version [Current Version]
        else
            echo "Keinen Zwischenspeicher gefunden; Arbeitsbereich wird geholt ..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace refresh •language '🇩🇪DE' •use‐version [Current Version]
        fi
    - name: Dokumentieren
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Systeminstallation von Arbeitsbereich wird verwendet ..."
            workspace validate •job deployment •language '🇩🇪DE' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Lagerzwischenspeicher von Arbeitsbereich wird verwendet ..."
            .build/SDG/Workspace/workspace validate •job deployment •language '🇩🇪DE' •use‐version [Current Version]
        else
            echo "Keinen Zwischenspeicher gefunden; Arbeitsbereich wird geholt ..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace validate •job deployment •language '🇩🇪DE' •use‐version [Current Version]
        fi
    - name: Zugriffsrechte zum Zwischenspeichern erteilen
      shell: bash
      run: |
        set -x
        chmod -R a+rwx .
    - name: Verteilen
      shell: bash
      run: |
        set -x
        cd docs
        git init
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git add .
        git commit -m "Erstellte Dokumentation für ${GITHUB_SHA}."
        git push --force https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git master:gh-pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
