# Workspace Validation.yaml
#
# This source file is part of the SDG open source project.
# Diese Quelldatei ist Teil des qeulloffenen SDG‚ÄêProjekt.
# https://example.github.io/SDG/SDG
#
# Copyright ¬©2020 John Doe and the SDG project contributors.
# Urheberrecht ¬©2020 John Doe und die Mitwirkenden des SDG‚ÄêProjekts.
# ¬©2020
#
# Soli Deo gloria.
#
# Licensed under the Apache Licence, Version 2.0.
# See http://www.apache.org/licenses/LICENSE-2.0 for licence information.

name: Workspace Validation

on: [push, pull_request]

jobs:
  macOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
        './Validate (macOS).command' ‚Ä¢job macos ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
  Windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Windows‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      shell: bash
      run: |
        echo 'Setting up Visual Studio... (in order to proceed as though in the Native Tools Command Prompt)'
        repository_directory=$(pwd)
        cd '/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build'
        echo 'export -p > exported_environment.sh' > nested_bash.sh
        echo 'vcvarsall.bat x64 && "C:/Program Files/Git/usr/bin/bash" -c ./nested_bash.sh' > export_environment.bat
        cmd "/c export_environment.bat"
        source ./exported_environment.sh
        if [ -z "$INCLUDE" ]; then echo 'Failed to set up Visual Studio.'; exit 1; fi
        cd "${repository_directory}"

        echo 'Fetching Windows platform module maps...'
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/ucrt.modulemap' -o "${UniversalCRTSdkDir}/Include/${UCRTVersion}/ucrt/module.modulemap"
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/visualc.modulemap' -o "${VCToolsInstallDir}/include/module.modulemap"
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/visualc.apinotes' -o "${VCToolsInstallDir}/include/visualc.apinotes"
        curl -L 'https://raw.githubusercontent.com/apple/swift/swift-5.2-branch/stdlib/public/Platform/winsdk.modulemap' -o "${UniversalCRTSdkDir}/Include/${UCRTVersion}/um/module.modulemap"

        echo 'Fetching Swift...'
        mkdir -p .build/SDG/Experimental_Swift
        cd .build/SDG/Experimental_Swift
        curl -o swift-build.py 'https://raw.githubusercontent.com/compnerd/swift-build/master/utilities/swift-build.py'
        python -m pip install --user azure-devops tabulate
        echo 'Downloading... (This could take up to 10 minutes.)'
        python swift-build.py --build-id 'VS2019 Swift 5.2' --latest-artifacts --filter windows-x64 --download > /dev/null
        7z x toolchain-windows-x64.zip
        mv toolchain-windows-x64/Library /c/Library
        7z x sdk-windows-x64.zip
        mv sdk-windows-x64/Library/Developer/Platforms /c/Library/Developer/Platforms
        cd "${repository_directory}"
        export PATH="/c/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin:${PATH}"
        mkdir -p /c/Library/Swift/Current
        cp -R /c/Library/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr/bin /c/Library/Swift/Current/bin
        export PATH="/c/Library/Swift/Current/bin:${PATH}"
        export PATH="/c/Library/Developer/Platforms/Windows.platform/Developer/Library/XCTest-development/usr/bin:${PATH}"
        swift --version

        echo 'Fetching ICU...'
        mkdir -p .build/SDG/ICU
        cd .build/SDG/ICU
        curl -L http://download.icu-project.org/files/icu4c/64.2/icu4c-64_2-Win64-MSVC2017.zip --output ICU.zip
        7z x ICU.zip -oICU-64.2
        mv ICU-64.2 /c/Library/ICU-64.2
        mv /c/Library/ICU-64.2/bin64 /c/Library/ICU-64.2/bin
        export PATH="/c/Library/ICU-64.2/bin:${PATH}"
        cd "${repository_directory}"

        echo 'Fetching package graph...'
        git clone file:///tmp/Developer/Dependency .build/SDG/Dependencies/Dependency --branch 1.0.0 --depth 1 --config advice.detachedHead=false

        echo 'Building SDG...'
        cmake -G Ninja -S .github/workflows/Windows -B .build/SDG/CMake -DCMAKE_Swift_FLAGS='-resource-dir C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift -I C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows\x86_64 -L C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift\windows -L C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows'
        cmake --build '.build/SDG/CMake'
        echo 'Testing SDG...'
        cd .build/SDG/CMake
        ctest --verbose
  Linux:
    runs-on: ubuntu-18.04
    container: swift:5.1.3-bionic
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Linux‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        apt-get update
        apt-get install --assume-yes curl libsqlite3-dev libncurses-dev
        './Refresh (macOS).command' ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
        './Validate (macOS).command' ‚Ä¢job linux ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
        chmod -R a+rwx .
  tvOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
        './Validate (macOS).command' ‚Ä¢job tvos ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
  iOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
        './Validate (macOS).command' ‚Ä¢job ios ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
  Android:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Android‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        echo 'Fetching Swift...'
        repository_directory=$(pwd)
        mkdir -p .build/SDG/Swift
        cd .build/SDG/Swift
        curl -o Swift.tar.gz 'https://swift.org/builds/swift-5.1.3-release/ubuntu1804/swift-5.1.3-RELEASE/swift-5.1.3-RELEASE-ubuntu18.04.tar.gz'
        tar --extract --file Swift.tar.gz
        sudo cp -R swift-5.1.3-RELEASE-ubuntu18.04/usr/* /usr/
        cd "${repository_directory}"
        swift --version

        echo 'Fetching Swift cross‚Äêcompilation toolchain...'
        mkdir -p .build/SDG/Experimental_Swift
        cd .build/SDG/Experimental_Swift
        curl -o swift-build.py 'https://raw.githubusercontent.com/compnerd/swift-build/master/utilities/swift-build.py'
        python -m pip install --user azure-devops tabulate
        echo 'Downloading... (This could take up to 10 minutes.)'
        python swift-build.py --build-id 'Ubuntu 18.04 (flowkey)' --latest-artifacts --filter toolchain-linux-x64 --download > /dev/null
        unzip toolchain-linux-x64.zip
        sudo mv toolchain-linux-x64/Library /Library
        chmod -R a+rwx /Library
        cd "${repository_directory}"
        /Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin/swift --version

        echo 'Fetching Swift Android SDK...'
        cd .build/SDG/Experimental_Swift
        python swift-build.py --build-id 'VS2019' --latest-artifacts --filter sdk-android-arm64 --download > /dev/null
        unzip sdk-android-arm64.zip
        mv sdk-android-arm64/Library/Developer/Platforms /Library/Developer/Platforms
        sed -i -e s~C:/Microsoft/AndroidNDK64/android-ndk-r16b~${ANDROID_HOME}/nkd-bundle~g /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/aarch64/glibc.modulemap
        cp -R "${ANDROID_HOME}/ndk-bundle/platforms/android-29/arch-arm64/"* /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk
        cd "${repository_directory}"

        echo 'Building SDG...'
        export TARGETING_ANDROID=true
        swift build --destination .github/workflows/Android/SDK.json
  watchOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: macOS‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        xcversion install 11.3
        xcversion select 11.3
        './Refresh (macOS).command' ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
        './Validate (macOS).command' ‚Ä¢job watchos ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
  Miscellaneous:
    runs-on: ubuntu-18.04
    container: swift:5.1.3-bionic
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        key: Linux‚Äê${{ hashFiles('Refresh*') }}‚Äê${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Validate
      run: |
        apt-get update
        apt-get install --assume-yes curl libsqlite3-dev libncurses-dev
        './Refresh (macOS).command' ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
        './Validate (macOS).command' ‚Ä¢job miscellaneous ‚Ä¢language 'üá®üá¶EN;üá¨üáßEN;üá∫üá∏EN;üá©üá™DE;üá´üá∑FR;üá¨üá∑ŒïŒõ;üáÆüá±◊¢◊ë;zxx'
        chmod -R a+rwx .
