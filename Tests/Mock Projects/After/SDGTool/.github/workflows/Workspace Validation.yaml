# Workspace Validation.yaml
#
# This source file is part of the SDG open source project.
# Diese Quelldatei ist Teil des quelloffenen SDG‐Projekt.
# https://example.github.io/SDG/SDG
#
# Copyright ©2020 John Doe and the SDG project contributors.
# Urheberrecht ©2020 John Doe und die Mitwirkenden des SDG‐Projekts.
# ©2020
#
# Soli Deo gloria.
#
# Licensed under the Apache Licence, Version 2.0.
# See http://www.apache.org/licenses/LICENSE-2.0 for licence information.

name: Workspace Validation

on: [push, pull_request]

jobs:
  macOS:
    runs-on: macos-10.15
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Cache Workspace
      uses: actions/cache@v1
      with:
        key: macOS‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Set Xcode up
      shell: bash
      run: |
        set -x
        sudo xcode-select -switch /Applications/Xcode_11.6.app
        xcodebuild -version
        swift --version
    - name: Install Workspace
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Using system install of Workspace..."
            workspace version •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Using repository cache of Workspace..."
            .build/SDG/Workspace/workspace version •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        else
            echo "No cached build detected; fetching Workspace..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace version •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        fi
    - name: Refresh
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Using system install of Workspace..."
            workspace refresh •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Using repository cache of Workspace..."
            .build/SDG/Workspace/workspace refresh •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        else
            echo "No cached build detected; fetching Workspace..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace refresh •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        fi
    - name: Validate
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Using system install of Workspace..."
            workspace validate •job macos •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Using repository cache of Workspace..."
            .build/SDG/Workspace/workspace validate •job macos •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        else
            echo "No cached build detected; fetching Workspace..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace validate •job macos •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        fi
  Windows:
    runs-on: windows-2019
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Cache Workspace
      uses: actions/cache@v1
      with:
        key: Windows‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Set Visual Studio up
      shell: bash
      run: |
        set -x
        cd '/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build'
        echo 'export -p > exported_environment.sh' > nested_bash.sh
        echo 'vcvarsall.bat x64 && "C:/Program Files/Git/usr/bin/bash" -c ./nested_bash.sh' > export_environment.bat
        cmd "/c export_environment.bat"
        set +x
        source ./exported_environment.sh
        set -x
        echo "::set-env name=PATH::${PATH}"
        echo "::set-env name=UniversalCRTSdkDir::${UniversalCRTSdkDir}"
        echo "::set-env name=UCRTVersion::${UCRTVersion}"
        echo "::set-env name=VCToolsInstallDir::${VCToolsInstallDir}"
    - name: Fetch WinSDK module maps
      shell: bash
      run: |
        set -x
        curl --location \
          'https://raw.githubusercontent.com/apple/swift/swift-5.2.1-RELEASE/stdlib/public/Platform/ucrt.modulemap' \
          --output "${UniversalCRTSdkDir}/Include/${UCRTVersion}/ucrt/module.modulemap"
        curl --location \
          'https://raw.githubusercontent.com/apple/swift/swift-5.2.1-RELEASE/stdlib/public/Platform/visualc.modulemap' \
          --output "${VCToolsInstallDir}/include/module.modulemap"
        curl --location \
          'https://raw.githubusercontent.com/apple/swift/swift-5.2.1-RELEASE/stdlib/public/Platform/visualc.apinotes' \
          --output "${VCToolsInstallDir}/include/visualc.apinotes"
        curl --location \
          'https://raw.githubusercontent.com/apple/swift/swift-5.2.1-RELEASE/stdlib/public/Platform/winsdk.modulemap' \
          --output "${UniversalCRTSdkDir}/Include/${UCRTVersion}/um/module.modulemap"
    - name: Install ICU
      shell: bash
      run: |
        set -x
        curl --location \
          'https://github.com/compnerd/swift-build/releases/download/v5.2.1/icu.msi' \
          --output '/tmp/icu.msi'
        cd /tmp
        msiexec //i icu.msi
        export PATH="/c/Library/icu-64/usr/bin:${PATH}"
        echo "::set-env name=PATH::${PATH}"
    - name: Install Swift
      shell: bash
      run: |
        set -x
        curl --location \
          'https://github.com/compnerd/swift-build/releases/download/v5.2.1/toolchain.msi' \
          --output '/tmp/toolchain.msi'
        cd /tmp
        msiexec //i toolchain.msi
        curl --location \
          'https://github.com/compnerd/swift-build/releases/download/v5.2.1/sdk.msi' \
          --output '/tmp/sdk.msi'
        cd /tmp
        msiexec //i sdk.msi
        curl --location \
          'https://github.com/compnerd/swift-build/releases/download/v5.2.1/runtime.msi' \
          --output '/tmp/runtime.msi'
        cd /tmp
        msiexec //i runtime.msi
        export PATH="/c/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin:${PATH}"
        echo "::set-env name=PATH::${PATH}"
        export PATH="/c/Library/Swift-development/bin:${PATH}"
        echo "::set-env name=PATH::${PATH}"
        export PATH="/c/Library/Developer/Platforms/Windows.platform/Developer/Library/XCTest-development/usr/bin:${PATH}"
        echo "::set-env name=PATH::${PATH}"
        swift --version
    - name: Install Linux
      shell: bash
      run: |
        set -x
        mkdir -p .build/SDG/tmp
        curl --location \
          'https://aka.ms/wsl-ubuntu-1804' \
          --output '.build/SDG/tmp/wsl-ubuntu-1804'
        7z x .build/SDG/tmp/wsl-ubuntu-1804 -o.build/SDG/Linux/Ubuntu
        export PATH="$(pwd)/.build/SDG/Linux/Ubuntu:${PATH}"
        echo "::set-env name=PATH::${PATH}"
        ubuntu1804 install --root
    - name: Install SwiftPM dependencies
      shell: bash
      run: |
        set -x
        ubuntu1804 run \
          apt-get update --assume-yes
        ubuntu1804 run \
          UCF_FORCE_CONFOLD=1 DEBIAN_FRONTEND=noninteractive \
          apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
            install --assume-yes \
              binutils \
              git \
              libc6-dev \
              libcurl4 \
              libedit2 \
              libgcc-5-dev \
              libpython2.7 \
              libsqlite3-0 \
              libstdc++-5-dev \
              libxml2 \
              lld-6.0 \
              pkg-config \
              tzdata \
              zlib1g-dev
        ubuntu1804 run \
          ln -s //usr/bin/lld-link-6.0 //usr/bin/lld-link
    - name: Install SwiftPM
      shell: bash
      run: |
        set -x
        ubuntu1804 run \
          mkdir -p /tmp
        ubuntu1804 run \
          curl --location \
            'https://swift.org/builds/swift-5.2.1-release/ubuntu1804/swift-5.2.1-RELEASE/swift-5.2.1-RELEASE-ubuntu18.04.tar.gz' \
            --output '/tmp/swift-5.2.1-RELEASE-ubuntu18.04.tar.gz'
        ubuntu1804 run \
          tar --extract --force-local --file /tmp/swift-5.2.1-RELEASE-ubuntu18.04.tar.gz --directory /tmp
        ubuntu1804 run \
          mkdir -p /
        ubuntu1804 run \
          cp -R /tmp/swift-5.2.1-RELEASE-ubuntu18.04/usr //
        ubuntu1804 run \
          swift --version
    - name: Build
      shell: bash
      run: |
        set -x
        export WSLENV=UniversalCRTSdkDir/p:UCRTVersion:VCToolsInstallDir/p
        ubuntu1804 run \
          TARGETING_WINDOWS='true' \
          swift build --destination .github/workflows/Windows/SDK.json \
            --configuration release \
            -Xswiftc -use-ld=lld \
            -Xswiftc -sdk -Xswiftc //mnt/c/Library/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk \
            -Xswiftc -resource-dir -Xswiftc //mnt/c/Library/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr/lib/swift \
            -Xswiftc -L -Xswiftc //mnt/c/Library/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr/lib/swift/windows \
            -Xswiftc -L -Xswiftc //mnt/c/Library/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr/lib/swift/windows/x86_64 \
            -Xswiftc -Xcc -Xswiftc -isystem -Xswiftc -Xcc -Xswiftc '"/${UniversalCRTSdkDir}/Include/${UCRTVersion}/ucrt"' \
            -Xswiftc -L -Xswiftc '"/${UniversalCRTSdkDir}/lib/${UCRTVersion}/ucrt/x64"' \
            -Xswiftc -Xcc -Xswiftc -isystem -Xswiftc -Xcc -Xswiftc '"/${VCToolsInstallDir}/include"' \
            -Xswiftc -L -Xswiftc '"/${VCToolsInstallDir}/lib/x64"' \
            -Xswiftc -Xcc -Xswiftc -isystem -Xswiftc -Xcc -Xswiftc '"/${UniversalCRTSdkDir}/Include/${UCRTVersion}/um"' \
            -Xswiftc -L -Xswiftc '"/${UniversalCRTSdkDir}/lib/${UCRTVersion}/um/x64"' \
            -Xswiftc -Xcc -Xswiftc -isystem -Xswiftc -Xcc -Xswiftc '"/${UniversalCRTSdkDir}/Include/${UCRTVersion}/shared"' \
            -Xswiftc -I -Xswiftc //mnt/c/Library/Developer/Platforms/Windows.platform/Developer/Library/XCTest-development/usr/lib/swift/windows/x86_64 \
            -Xswiftc -L -Xswiftc //mnt/c/Library/Developer/Platforms/Windows.platform/Developer/Library/XCTest-development/usr/lib/swift/windows
    - name: Fetch dependencies
      shell: bash
      run: |
        set -x
        git clone file:///tmp/Developer/Dependency .build/SDG/Dependencies/Dependency --branch 1.0.0 --depth 1 --config advice.detachedHead=false
    - name: Build
      shell: bash
      run: |
        set -x
        export PATH=$(echo -n $PATH | awk -v RS=: -v ORS=: '!($0 in a) {a[$0]; print $0}')
        cmake -G Ninja -S .github/workflows/Windows -B .build/SDG/CMake -DCMAKE_Swift_FLAGS='-sdk C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk -I C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift -I C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows\x86_64 -L C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr\lib\swift\windows -L C:\Library\Developer\Platforms\Windows.platform\Developer\Library\XCTest-development\usr\lib\swift\windows'
        cmake --build '.build/SDG/CMake'
    - name: Test
      shell: bash
      run: |
        set -x
        export PATH=$(echo -n $PATH | awk -v RS=: -v ORS=: '!($0 in a) {a[$0]; print $0}')
        cd .build/SDG/CMake
        ctest --verbose
  Web:
    runs-on: macos-10.15
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Cache Workspace
      uses: actions/cache@v1
      with:
        key: Web‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Install Swift
      shell: bash
      run: |
        set -x
        curl --location \
          'https://github.com/swiftwasm/swift/releases/download/swift-wasm-DEVELOPMENT-SNAPSHOT-2020-03-31-a/swift-wasm-DEVELOPMENT-SNAPSHOT-2020-03-31-a-osx.tar.gz' \
          --output '/tmp/swift-wasm-DEVELOPMENT-SNAPSHOT-2020-03-31-a-osx.tar.gz'
        tar --extract --file /tmp/swift-wasm-DEVELOPMENT-SNAPSHOT-2020-03-31-a-osx.tar.gz --directory /tmp
        mkdir -p .build/SDG/Swift
        cp -R /tmp/swift-wasm-DEVELOPMENT-SNAPSHOT-2020-03-31-a/* .build/SDG/Swift
        .build/SDG/Swift/usr/bin/swift --version
    - name: Build
      shell: bash
      run: |
        set -x
        export TARGETING_WEB=true
        .build/SDG/Swift/usr/bin/swift build --triple wasm32-unknown-wasi
  Linux:
    runs-on: ubuntu-18.04
    container: swift:5.2.1-bionic
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Cache Workspace
      uses: actions/cache@v1
      with:
        key: Linux‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Install SwiftPM dependencies
      shell: bash
      run: |
        set -x
        apt-get update --assume-yes
        UCF_FORCE_CONFOLD=1 DEBIAN_FRONTEND=noninteractive \
        apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
          install --assume-yes \
            libncurses-dev \
            libsqlite3-dev
    - name: Install cURL
      shell: bash
      run: |
        set -x
        apt-get update --assume-yes
        UCF_FORCE_CONFOLD=1 DEBIAN_FRONTEND=noninteractive \
        apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
          install --assume-yes \
            curl
    - name: Install Workspace
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Using system install of Workspace..."
            workspace version •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Using repository cache of Workspace..."
            .build/SDG/Workspace/workspace version •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        else
            echo "No cached build detected; fetching Workspace..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace version •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        fi
    - name: Refresh
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Using system install of Workspace..."
            workspace refresh •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Using repository cache of Workspace..."
            .build/SDG/Workspace/workspace refresh •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        else
            echo "No cached build detected; fetching Workspace..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace refresh •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        fi
    - name: Validate
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Using system install of Workspace..."
            workspace validate •job linux •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Using repository cache of Workspace..."
            .build/SDG/Workspace/workspace validate •job linux •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        else
            echo "No cached build detected; fetching Workspace..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace validate •job linux •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        fi
    - name: Grant permission to cache
      shell: bash
      run: |
        set -x
        chmod -R a+rwx .
  Android:
    runs-on: ubuntu-18.04
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Cache Workspace
      uses: actions/cache@v1
      with:
        key: Android‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Install Swift
      shell: bash
      run: |
        set -x
        curl --location \
          'https://swift.org/builds/swift-5.2.1-release/ubuntu1804/swift-5.2.1-RELEASE/swift-5.2.1-RELEASE-ubuntu18.04.tar.gz' \
          --output '/tmp/swift-5.2.1-RELEASE-ubuntu18.04.tar.gz'
        tar --extract --file /tmp/swift-5.2.1-RELEASE-ubuntu18.04.tar.gz --directory /tmp
        sudo mkdir -p /
        sudo cp -R /tmp/swift-5.2.1-RELEASE-ubuntu18.04/* /
        swift --version
    - name: Fetch Android SDK
      shell: bash
      run: |
        set -x
        curl --location \
          'https://github.com/compnerd/swift-build/releases/download/v5.2.1/sdk-android-x86_64.zip' \
          --output '/tmp/sdk-android-x86_64.zip'
        unzip /tmp/sdk-android-x86_64.zip -d /tmp
        sudo mkdir -p /Library
        sudo cp -R /tmp/Library/* /Library
        sudo chmod -R a+rwx /Library
        sed -i -e s~C:/Microsoft/AndroidNDK64/android-ndk-r16b~${ANDROID_HOME}/ndk-bundle~g /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/x86_64/glibc.modulemap
    - name: Fetch ICU
      shell: bash
      run: |
        set -x
        curl --location \
          'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/icu-android-x64.zip' \
          --output '/tmp/icu-android-x64.zip'
        unzip /tmp/icu-android-x64.zip -d /tmp
        mkdir -p /
        cp -R /tmp/icu-android-x64/* /
        curl --location \
          'https://github.com/SDGGiesbrecht/Workspace/releases/download/experimental%E2%80%90swift%E2%80%90pre%E2%80%905.2%E2%80%902020%E2%80%9002%E2%80%9005/libicudt64.so' \
          --output '/Library/icu-64/usr/lib/libicudt64.so'
    - name: Build
      shell: bash
      run: |
        set -x
        export TARGETING_ANDROID=true
        swift build --destination .github/workflows/Android/SDK.json \
          --build-tests --enable-test-discovery \
          -Xswiftc -resource-dir -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift \
          -Xcc --sysroot=${ANDROID_HOME}/ndk-bundle/sysroot \
          -Xswiftc -tools-directory -Xswiftc ${ANDROID_HOME}/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin \
          -Xswiftc -Xclang-linker -Xswiftc --gcc-toolchain=${ANDROID_HOME}/ndk-bundle/toolchains/x86_64-4.9/prebuilt/linux-x86_64 \
          -Xswiftc -Xclang-linker -Xswiftc --sysroot=${ANDROID_HOME}/ndk-bundle/platforms/android-29/arch-x86_64 \
          -Xswiftc -I -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android/x86_64 \
          -Xswiftc -L -Xswiftc /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android
    - name: Copy libraries
      shell: bash
      run: |
        set -x
        mkdir -p .build/x86_64-unknown-linux-android/debug
        cp -R ${ANDROID_HOME}/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/x86_64/* .build/x86_64-unknown-linux-android/debug
        mkdir -p .build/x86_64-unknown-linux-android/debug
        cp -R /Library/icu-64/usr/lib/* .build/x86_64-unknown-linux-android/debug
        mkdir -p .build/x86_64-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/SDKs/Android.sdk/usr/lib/swift/android/* .build/x86_64-unknown-linux-android/debug
        mkdir -p .build/x86_64-unknown-linux-android/debug
        cp -R /Library/Developer/Platforms/Android.platform/Developer/Library/XCTest-development/usr/lib/swift/android/* .build/x86_64-unknown-linux-android/debug
    - name: Upload tests
      uses: actions/upload-artifact@v1
      with:
        name: tests
        path: .build/x86_64-unknown-linux-android/debug
  Android_II:
    name: Android II
    runs-on: macos-10.15
    needs: Android
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Download tests
      uses: actions/download-artifact@v1
      with:
        name: tests
        path: .build/x86_64-unknown-linux-android/debug
    - name: Prepare script
      shell: bash
      run: |
        set -x
        mkdir -p .build/SDG
        echo '
        set -e
        adb -e push . /data/local/tmp/Package
        adb -e shell chmod -R +x /data/local/tmp/Package/.build/x86_64-unknown-linux-android/debug
        adb -e shell \
          LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/data/local/tmp/Package/.build/x86_64-unknown-linux-android/debug \
          HOME=/data/local/tmp/Home \
          SWIFTPM_PACKAGE_ROOT=/data/local/tmp/Package \
          /data/local/tmp/Package/.build/x86_64-unknown-linux-android/debug/SDGPackageTests.xctest
        ' > .build/SDG/Emulator.sh
        chmod +x .build/SDG/Emulator.sh
    - name: Test
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        arch: x86_64
        script: .build/SDG/Emulator.sh
  Miscellaneous:
    runs-on: ubuntu-18.04
    container: swift:5.2.1-bionic
    steps:
    - name: Check out
      uses: actions/checkout@v1
    - name: Cache Workspace
      uses: actions/cache@v1
      with:
        key: Linux‐${{ hashFiles('.github/workflows/**') }}
        path: .build/SDG/Workspace
    - name: Install SwiftPM dependencies
      shell: bash
      run: |
        set -x
        apt-get update --assume-yes
        UCF_FORCE_CONFOLD=1 DEBIAN_FRONTEND=noninteractive \
        apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
          install --assume-yes \
            libncurses-dev \
            libsqlite3-dev
    - name: Install cURL
      shell: bash
      run: |
        set -x
        apt-get update --assume-yes
        UCF_FORCE_CONFOLD=1 DEBIAN_FRONTEND=noninteractive \
        apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
          install --assume-yes \
            curl
    - name: Install Workspace
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Using system install of Workspace..."
            workspace version •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Using repository cache of Workspace..."
            .build/SDG/Workspace/workspace version •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        else
            echo "No cached build detected; fetching Workspace..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace version •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        fi
    - name: Refresh
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Using system install of Workspace..."
            workspace refresh •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Using repository cache of Workspace..."
            .build/SDG/Workspace/workspace refresh •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        else
            echo "No cached build detected; fetching Workspace..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace refresh •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        fi
    - name: Validate
      shell: bash
      run: |
        set -x
        if workspace version > /dev/null 2>&1 ; then
            echo "Using system install of Workspace..."
            workspace validate •job miscellaneous •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        elif .build/SDG/Workspace/workspace version > /dev/null 2>&1 ; then
            echo "Using repository cache of Workspace..."
            .build/SDG/Workspace/workspace validate •job miscellaneous •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        else
            echo "No cached build detected; fetching Workspace..."
            export OVERRIDE_INSTALLATION_DIRECTORY=.build/SDG
            curl -sL https://gist.github.com/SDGGiesbrecht/4d76ad2f2b9c7bf9072ca1da9815d7e2/raw/update.sh | bash -s Workspace "https://github.com/SDGGiesbrecht/Workspace" [Current Version] "" workspace
            .build/SDG/Workspace/workspace validate •job miscellaneous •language '🇨🇦EN;🇬🇧EN;🇺🇸EN;🇩🇪DE;🇫🇷FR;🇬🇷ΕΛ;🇮🇱עב;zxx' •use‐version [Current Version]
        fi
    - name: Grant permission to cache
      shell: bash
      run: |
        set -x
        chmod -R a+rwx .
