
$ workspace refresh scripts

Refreshing scripts...


$ swift package resolve

Writing to “Refresh (macOS).command”...
Writing to “Refresh (Linux).sh”...

$ swift package resolve

Writing to “Validate (macOS).command”...
$ workspace refresh resources

Refreshing resources...

$ workspace proofread

Normalizing files...


Proofreading source code... (§1)

Package.swift
README.md
Sources/Default/Default.swift
Tests/DefaultTests/DefaultTests.swift
Tests/LinuxMain.swift

$ swiftlint lint --strict --config [...]/SwiftLint/Configuration.yml --reporter emoji


$ swift package resolve


✓ Source code passes proofreading.


“Default” passes validation.

$ workspace validate build

Checking build for macOS with the Swift Package Manager... (§1)


$ swift build
Compile Swift Module 'Default' (1 sources)


Checking build for macOS with Xcode... (§2)


$ xcodebuild build -sdk macosx -scheme Default-Package
Build settings from command line:
    SDKROOT = macosx10.13

=== BUILD TARGET Default OF PROJECT Default WITH CONFIGURATION Debug ===

Check dependencies

ProcessInfoPlistFile [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/Default.framework/Versions/A/Resources/Info.plist Default.xcodeproj/Default_Info.plist
    cd "[...]/Tests/Mock Projects/After/Default"
    builtin-infoPlistUtility [...]/Tests/Mock\ Projects/After/Default/Default.xcodeproj/Default_Info.plist -expandbuildsettings -platform macosx -o [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/Default.framework/Versions/A/Resources/Info.plist

Touch [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/Default.framework
    cd "[...]/Tests/Mock Projects/After/Default"
    /usr/bin/touch -c [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/Default.framework

** BUILD SUCCEEDED **



Checking build for iOS... (§3)


$ xcodebuild build -sdk iphoneos -scheme Default-Package
Build settings from command line:
    SDKROOT = iphoneos11.2

=== BUILD TARGET Default OF PROJECT Default WITH CONFIGURATION Debug ===

Check dependencies

ProcessInfoPlistFile [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-iphoneos/Default.framework/Info.plist Default.xcodeproj/Default_Info.plist
    cd "[...]/Tests/Mock Projects/After/Default"
    export PATH="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:[...]/.SDG/Registry:[...]/.rvm/gems/ruby-2.4.1/bin:[...]/.rvm/gems/ruby-2.4.1@global/bin:[...]/.rvm/rubies/ruby-2.4.1/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:[...]/.rvm/bin"
    builtin-infoPlistUtility [...]/Tests/Mock\ Projects/After/Default/Default.xcodeproj/Default_Info.plist -expandbuildsettings -format binary -platform iphoneos -requiredArchitecture arm64 -o [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-iphoneos/Default.framework/Info.plist

Touch [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-iphoneos/Default.framework
    cd "[...]/Tests/Mock Projects/After/Default"
    export PATH="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:[...]/.SDG/Registry:[...]/.rvm/gems/ruby-2.4.1/bin:[...]/.rvm/gems/ruby-2.4.1@global/bin:[...]/.rvm/rubies/ruby-2.4.1/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:[...]/.rvm/bin"
    /usr/bin/touch -c [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-iphoneos/Default.framework

** BUILD SUCCEEDED **



Checking build for watchOS... (§4)


$ xcodebuild build -sdk watchos -scheme Default-Package
Build settings from command line:
    SDKROOT = watchos4.2

=== BUILD TARGET Default OF PROJECT Default WITH CONFIGURATION Debug ===

Check dependencies
Default will not be code signed because its settings don't specify a development team.

ProcessInfoPlistFile [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-watchos/Default.framework/Info.plist Default.xcodeproj/Default_Info.plist
    cd "[...]/Tests/Mock Projects/After/Default"
    export PATH="/Applications/Xcode.app/Contents/Developer/Platforms/WatchOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:[...]/.SDG/Registry:[...]/.rvm/gems/ruby-2.4.1/bin:[...]/.rvm/gems/ruby-2.4.1@global/bin:[...]/.rvm/rubies/ruby-2.4.1/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:[...]/.rvm/bin"
    builtin-infoPlistUtility [...]/Tests/Mock\ Projects/After/Default/Default.xcodeproj/Default_Info.plist -expandbuildsettings -format binary -platform watchos -o [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-watchos/Default.framework/Info.plist

Touch [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-watchos/Default.framework
    cd "[...]/Tests/Mock Projects/After/Default"
    export PATH="/Applications/Xcode.app/Contents/Developer/Platforms/WatchOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:[...]/.SDG/Registry:[...]/.rvm/gems/ruby-2.4.1/bin:[...]/.rvm/gems/ruby-2.4.1@global/bin:[...]/.rvm/rubies/ruby-2.4.1/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:[...]/.rvm/bin"
    /usr/bin/touch -c [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-watchos/Default.framework

** BUILD SUCCEEDED **



Checking build for tvOS... (§5)


$ xcodebuild build -sdk appletvos -scheme Default-Package
Build settings from command line:
    SDKROOT = appletvos11.2

=== BUILD TARGET Default OF PROJECT Default WITH CONFIGURATION Debug ===

Check dependencies
Default will not be code signed because its settings don't specify a development team.

ProcessInfoPlistFile [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-appletvos/Default.framework/Info.plist Default.xcodeproj/Default_Info.plist
    cd "[...]/Tests/Mock Projects/After/Default"
    export PATH="/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:[...]/.SDG/Registry:[...]/.rvm/gems/ruby-2.4.1/bin:[...]/.rvm/gems/ruby-2.4.1@global/bin:[...]/.rvm/rubies/ruby-2.4.1/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:[...]/.rvm/bin"
    builtin-infoPlistUtility [...]/Tests/Mock\ Projects/After/Default/Default.xcodeproj/Default_Info.plist -expandbuildsettings -format binary -platform appletvos -o [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-appletvos/Default.framework/Info.plist

Touch [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-appletvos/Default.framework
    cd "[...]/Tests/Mock Projects/After/Default"
    export PATH="/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:[...]/.SDG/Registry:[...]/.rvm/gems/ruby-2.4.1/bin:[...]/.rvm/gems/ruby-2.4.1@global/bin:[...]/.rvm/rubies/ruby-2.4.1/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:[...]/.rvm/bin"
    /usr/bin/touch -c [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug-appletvos/Default.framework

** BUILD SUCCEEDED **



✓ There are no compiler warnings for macOS with the Swift Package Manager.
✓ There are no compiler warnings for macOS with Xcode.
✓ There are no compiler warnings for iOS.
✓ There are no compiler warnings for watchOS.
✓ There are no compiler warnings for tvOS.


“Default” passes validation.

$ workspace test

Testing on macOS with the Swift Package Manager... (§1)


$ swift test
Compile Swift Module 'DefaultTests' (1 sources)
Linking ./.build/x86_64-apple-macosx10.10/debug/DefaultPackageTests.xctest/Contents/MacOS/DefaultPackageTests


Testing on macOS with Xcode... (§2)


$ xcodebuild test -sdk macosx -scheme Default-Package
Build settings from command line:
    SDKROOT = macosx10.13

=== BUILD TARGET Default OF PROJECT Default WITH CONFIGURATION Debug ===

Check dependencies

=== BUILD TARGET DefaultTests OF PROJECT Default WITH CONFIGURATION Debug ===

Check dependencies

ProcessInfoPlistFile [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Info.plist Default.xcodeproj/DefaultTests_Info.plist
    cd "[...]/Tests/Mock Projects/After/Default"
    builtin-infoPlistUtility [...]/Tests/Mock\ Projects/After/Default/Default.xcodeproj/DefaultTests_Info.plist -expandbuildsettings -platform macosx -o [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Info.plist

CopySwiftLibs [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest
    cd "[...]/Tests/Mock Projects/After/Default"
    export CODESIGN_ALLOCATE=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/codesign_allocate
    export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer
    export SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk
    builtin-swiftStdLibTool --copy --verbose --scan-executable [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/MacOS/DefaultTests --scan-folder [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks --scan-folder [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/PlugIns --scan-folder [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/Default.framework --platform macosx --toolchain /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain --destination [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks --strip-bitcode --resource-destination [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Resources --resource-library libswiftRemoteMirror.dylib
Requested Swift ABI version based on scanned binaries: 5
libswiftCore.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftCore.dylib
libswiftAppKit.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftAppKit.dylib
libswiftCoreData.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftCoreData.dylib
libswiftCoreFoundation.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftCoreFoundation.dylib
libswiftCoreGraphics.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftCoreGraphics.dylib
libswiftCoreImage.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftCoreImage.dylib
libswiftDarwin.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftDarwin.dylib
libswiftDispatch.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftDispatch.dylib
libswiftFoundation.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftFoundation.dylib
libswiftIOKit.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftIOKit.dylib
libswiftMetal.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftMetal.dylib
libswiftObjectiveC.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftObjectiveC.dylib
libswiftQuartzCore.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftQuartzCore.dylib
libswiftXCTest.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftXCTest.dylib
libswiftXPC.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftXPC.dylib
libswiftos.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Frameworks/libswiftos.dylib
libswiftRemoteMirror.dylib is up to date at [...]/Library/Developer/Xcode/DerivedData/Default-crpxgvdgcdfrmiakfvxxfraggzcv/Build/Products/Debug/DefaultTests.xctest/Contents/Resources/libswiftRemoteMirror.dylib

** TEST SUCCEEDED **

Test Suite 'All tests' [...]Test Suite 'DefaultTests.xctest' [...]Test Suite 'DefaultTests' [...]Test Case '-[DefaultTests.DefaultTests testExample]' started.
Test Case '-[DefaultTests.DefaultTests testExample]' [...]).
Test Suite 'DefaultTests' passed at 2018-02-05 16:43:12.497.
	 Executed 1 test, with 0 failures (0 [...]
Test Suite 'DefaultTests.xctest' passed at 2018-02-05 16:43:12.497.
	 Executed 1 test, with 0 failures (0 [...]
Test Suite 'All tests' passed at 2018-02-05 16:43:12.498.
	 Executed 1 test, with 0 failures (0 [...]


✓ Tests pass on macOS with the Swift Package Manager.
✓ Tests pass on macOS with Xcode.


“Default” passes validation.

$ workspace validate test‐coverage

$ workspace validate documentation‐coverage

Generating documentation for “Default”...


$ jazzy --module Default --copyright "Copyright ©2018 the Default project contributors. All rights reserved." --documentation=Documentation/*.md --clean --use-safe-filenames --output "[...]/Documentation/Default" --xcodebuild-arguments "-scheme,Default-Package,-target,Default,-sdk,macosx,-derivedDataPath,[...]/Jazzy Build Artifacts"
0% documentation coverage with 0 undocumented symbols
skipped 1 private, fileprivate, or internal symbol (use `--min-acl` to specify a different minimum ACL)
jam out ♪♫ to your fresh new docs in `[...]/Documentation/Default`

Writing to “[...]/Documentation/Default/.nojekyll”...

$ swift package resolve


Checking documentation coverage for “Default”... (§1)


✓ Generated documentation for “Default”.
✓ Documentation coverage is complete for “Default”.


“Default” passes validation.

$ workspace proofread •xcode

$ swiftlint lint --strict --config [...]/SwiftLint/Configuration.yml --quiet
