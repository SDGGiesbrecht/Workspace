
$ workspace refresh scripts

Refreshing scripts...


$ swift package resolve

Writing to “Refresh (macOS).command”...
Writing to “Refresh (Linux).sh”...

$ swift package resolve

Writing to “Validate (macOS).command”...
$ workspace refresh resources

Refreshing resources...

$ workspace proofread

Normalizing files...


Proofreading source code... (§1)

.Workspace Configuration.txt
.gitignore
Package.swift
README.md
Sources/NoMacOSOrIOSOrWatchOS/NoMacOSOrIOSOrWatchOS.swift
Tests/LinuxMain.swift
Tests/NoMacOSOrIOSOrWatchOSTests/NoMacOSOrIOSOrWatchOSTests.swift

$ swiftlint lint --strict --config [...]/SwiftLint/Configuration.yml --reporter emoji


$ swift package resolve


✓ Source code passes proofreading.


“NoMacOSOrIOSOrWatchOS” passes validation.

$ workspace validate documentation‐coverage

Generating documentation for “NoMacOSOrIOSOrWatchOS”...


$ jazzy --module NoMacOSOrIOSOrWatchOS --copyright "Copyright ©2018 the NoMacOSOrIOSOrWatchOS project contributors. All rights reserved." --documentation=Documentation/*.md --clean --use-safe-filenames --output "[...]/Tests/Mock Projects/Before/NoMacOSOrIOSOrWatchOS/docs/NoMacOSOrIOSOrWatchOS" --xcodebuild-arguments "-scheme,NoMacOSOrIOSOrWatchOS-Package,-target,NoMacOSOrIOSOrWatchOS,-sdk,appletvos,-derivedDataPath,[...]/Jazzy Build Artifacts"
0% documentation coverage with 0 undocumented symbols
skipped 1 private, fileprivate, or internal symbol (use `--min-acl` to specify a different minimum ACL)
jam out ♪♫ to your fresh new docs in `docs/NoMacOSOrIOSOrWatchOS`

Writing to “docs/NoMacOSOrIOSOrWatchOS/.nojekyll”...

$ swift package resolve


Checking documentation coverage for “NoMacOSOrIOSOrWatchOS”... (§1)


✓ Generated documentation for “NoMacOSOrIOSOrWatchOS”.
✓ Documentation coverage is complete for “NoMacOSOrIOSOrWatchOS”.


“NoMacOSOrIOSOrWatchOS” passes validation.
