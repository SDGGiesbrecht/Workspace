$ arbeitsbereich proofread •no‐colour

Deteien werden normalisiert ...


Quelltext Korrektur wird gelesen ...

.gitignore
Other/CSS.css
Other/HTML.html
Other/JavaScript.js
Package.swift
Zeile 2
Das Schriftzeichen U+002D ist überholt. Einen Bindestrich (‐), Minuszeichen (−), Gedankenstrich (–) oder Aufzählungszeichen (•) verwenden. (unicode)
// The swift-tools-version declares the minimum version of Swift required to build this package.

Zeile 2
Das Schriftzeichen U+002D ist überholt. Einen Bindestrich (‐), Minuszeichen (−), Gedankenstrich (–) oder Aufzählungszeichen (•) verwenden. (unicode)
// The swift-tools-version declares the minimum version of Swift required to build this package.

README.md
Sources/BadStyle/BadStyle.swift
Sources/BadStyle/Normalization/Decomposition.swift
Sources/BadStyle/Normalization/EmptyIndents.swift
Sources/BadStyle/Normalization/MarkdownLineBreaks.md
Sources/BadStyle/Normalization/ShellExecutability.sh
Sources/BadStyle/Rules/Documentation/SyntaxColouring.swift
Zeile 7
Das Sprachkennzeichen fehlt. Eine Sprache für Syntaxhervorhebung angeben. (syntaxhervorhebung)
/// ```

Sources/BadStyle/Rules/Functionality/CompatibilityCharacters.swift
Zeile 3
U+00B2 geht bei Normalisierung vielleicht verloren; stattdessen „2“ verwenden. (verträglichkeitsschriftzeichen)
let compatibility = "2"
let compatibility = "2"

Sources/BadStyle/Rules/Functionality/Mark.swift
Zeile 3
Unvollständige Überschriftssyntax. „// MARK: - “ verwenden. (überschrifte)
/// MARK: This heading is malformed and should trigger.
// MARK: - This heading is malformed and should trigger.

Sources/BadStyle/Rules/Intentional/MissingImplementation.swift
Zeile 4
Fehlende Implementierung. (fehlendeImplementierung)
  notImplementedYet()  // This should trigger a warning.

Sources/BadStyle/Rules/Source Code Style/CalloutCasing.swift
Zeile 5
Hervorhebungen sollen großgeschrieben sein. (hervorhebungsGroßschreibung)
/// - warning: This should trigger. It should have been capitalized.
/// - Warning: This should trigger. It should have been capitalized.

Sources/BadStyle/Rules/Source Code Style/ClosureSignaturePosition.swift
Zeile 6
Die Signatur eines Abschluss soll an der selbe Zeile stehen als seine öffnende geschweifte Klammer. (abschlusssignaturplatzierung)
  parameter in  // Wrong position; should trigger.

Sources/BadStyle/Rules/Source Code Style/ParameterStyle.swift
Zeile 5
Übergabewerte sollen unter einer einzigen Hervorhebung gestellt sein. (übergabewertenzusammenstellung)
/// - Parameter one: A parameter documented the wrong way, so trigger.

Sources/BadStyle/Rules/Text Style/Unicode.swift
Zeile 5
Das Schriftzeichen U+0022 ist überholt. Anführungszeichen („, “) oder Doppelprime (′′) verwenden. (unicode)
// "These quotation marks are generic and should trigger."

Zeile 5
Das Schriftzeichen U+0022 ist überholt. Anführungszeichen („, “) oder Doppelprime (′′) verwenden. (unicode)
// "These quotation marks are generic and should trigger."

Zeile 9
Das Schriftzeichen U+002D ist überholt. Einen Bindestrich (‐), Minuszeichen (−), Gedankenstrich (–) oder Aufzählungszeichen (•) verwenden. (unicode)
// Trigger, because this is not a minus sign: a - b

Zeile 11
Das Schriftzeichen U+002D ist überholt. Einen Bindestrich (‐), Minuszeichen (−), Gedankenstrich (–) oder Aufzählungszeichen (•) verwenden. (unicode)
// #workaround(bash --version 1000.0.0, The stroke should warn and an exemption should be required.)

Zeile 11
Das Schriftzeichen U+002D ist überholt. Einen Bindestrich (‐), Minuszeichen (−), Gedankenstrich (–) oder Aufzählungszeichen (•) verwenden. (unicode)
// #workaround(bash --version 1000.0.0, The stroke should warn and an exemption should be required.)

Zeile 19
Das Schriftzeichen U+002D ist überholt. Einen Bindestrich (‐), Minuszeichen (−), Gedankenstrich (–) oder Aufzählungszeichen (•) verwenden. (unicode)
/// - RecommendedOver: -

Zeile 41
Das Schriftzeichen U+0027 ist überholt. Einen Apostrophe (’), Anführungs‐ (‚, ‘), Grad‐ (°) oder Prime‐Zeichen (′) verwenden. (unicode)
// 'These quotation marks are generic and should trigger.'

Zeile 41
Das Schriftzeichen U+0027 ist überholt. Einen Apostrophe (’), Anführungs‐ (‚, ‘), Grad‐ (°) oder Prime‐Zeichen (′) verwenden. (unicode)
// 'These quotation marks are generic and should trigger.'

Zeile 45
Die Schriftzeichenfolge “&&” ist überholt. Ein Konjunktionszeichen (∧) verwenden. (unicode)
// Trigger, because this is not a conjunction sign: a && b
// Trigger, because this is not a conjunction sign: a ∧ b

Zeile 46
Die Schriftzeichenfolge “||” ist überholt. Ein Disjunktionszeichen (∨) verwenden. (unicode)
// Trigger, because this is not a disjunction sign: a || b
// Trigger, because this is not a disjunction sign: a ∨ b

Zeile 50
Die Schriftzeichenfolge “!=” ist überholt. Ein Ungleichheitszeichen (≠) verwenden. (unicode)
// Trigger, because this is not a not‐equal sign: a != b
// Trigger, because this is not a not‐equal sign: a ≠ b

Zeile 51
Die Schriftzeichenfolge “<=” ist überholt. Ein kleiner‐als‐oder‐gleich‐Zeichen (≤) verwenden. (unicode)
// Trigger, because this is not a less‐than‐or‐equal‐to sign: a <= b
// Trigger, because this is not a less‐than‐or‐equal‐to sign: a ≤ b

Zeile 52
Die Schriftzeichenfolge “>=” ist überholt. Ein größer‐als‐oder‐gleich‐Zeichen (≥) verwenden. (unicode)
// Trigger, because this is not a greater‐than‐or‐equal‐to sign: a >= b
// Trigger, because this is not a greater‐than‐or‐equal‐to sign: a ≥ b

Zeile 56
Das Schriftzeichen “*” ist überholt. Ein Malzeichen (⋅) verwenden. (Wenn nötig, ein Alias erstellen.) (unicode)
let x = a * b  // Trigger, because this is not a multiplication sign.
let x = a × b  // Trigger, because this is not a multiplication sign.

Zeile 57
Die Schriftzeichenfolge “*=” ist überholt. Ein Malzeichen (⋅) verwenden. (unicode)
// Trigger, because this is not a multiplication sign: a *= b
// Trigger, because this is not a multiplication sign: a ×= b

Zeile 58
Das Schriftzeichen “/” ist überholt. Ein Geteiltzeichen (∶) verwenden. (Wenn nötig, ein Alias erstellen.) (unicode)
let x = a / b  // Trigger, because this is not a division sign.
let x = a ÷ b  // Trigger, because this is not a division sign.

Zeile 59
Die Schriftzeichenfolge “/=” ist überholt. Ein Geteiltzeichen (∶) verwenden. (unicode)
// Trigger, because this is not a division sign: a /= b
// Trigger, because this is not a division sign: a ÷= b

Zeile 63
Das Schriftzeichen U+002D ist überholt. Einen Bindestrich (‐), Minuszeichen (−), Gedankenstrich (–) oder Aufzählungszeichen (•) verwenden. (Wenn nötig, ein Alias erstellen.) (unicode)
let x = y - z  // This should trigger and mention aliasing.

Zeile 65
Das Schriftzeichen “!” ist überholt. Ein Negationszeichen (¬) verwenden. (Wenn nötig, ein Alias erstellen.) (unicode)
let x = !y  // This should trigger; it is a prefix operator.
let x = ¬y  // This should trigger; it is a prefix operator.

Sources/BadStyle/SwiftFormat.swift
Zeile 1
[AmbiguousTrailingClosureOverload]: rename 'triggerSwiftFormatWithOverload(_:)' so it is no longer ambiguous with a trailing closure (swiftFormat)
func triggerSwiftFormatWithOverload(_ closure: (Bool) -> Bool) {}

Sources/BadStyle/Warnings/Warning.swift
Zeile 3
This should trigger a warning. (warnungenVonHand)
// #warning(This should trigger a warning.)

Sources/BadStyle/Warnings/Workaround.swift
Zeile 3
Notlösung: This should trigger. The workaround may no longer be necessary. (notlösungsErinnerungen)
// #workaround(Dependency 0.9.9, This should trigger. The workaround may no longer be necessary.)

Zeile 6
Notlösung: This should trigger. The workaround may no longer be necessary. (notlösungsErinnerungen)
// #workaround(Swift 3, This should trigger. The workaround may no longer be necessary.)

Zeile 9
Notlösung: This should trigger. The workaround may no longer be necessary. (notlösungsErinnerungen)
// #workaround(echo 1.0.0 0.9.9, This should trigger. The workaround may no longer be necessary.)

Zeile 12
Notlösung: This should trigger no matter what. (notlösungsErinnerungen)
// #workaround(This should trigger no matter what.)

Zeile 13
Notlösung: This malformed version check should trigger. (notlösungsErinnerungen)
// #workaround(echo oops 1.0.0, This malformed version check should trigger.)

Tests/BadStyleTests/BadStyleTests.swift
Tests/BadStyleTests/XCTestManifests.swift
Zeile 1
Testlisten werden nicht mehr benötigt. (überholteTestlisten)
#if !canImport(ObjectiveC)
  import XCTest

  extension BadStyleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BadStyleTests = [
      ("testExample", testExample),
    ]
  }

  public func __allTests() -> [XCTestCaseEntry] {
    return [
      testCase(BadStyleTests.__allTests__BadStyleTests),
    ]
  }
#endif

Zeile 6
Das Schriftzeichen U+002D ist überholt. Einen Bindestrich (‐), Minuszeichen (−), Gedankenstrich (–) oder Aufzählungszeichen (•) verwenden. (unicode)
    //   `swift test --generate-linuxmain`

Zeile 6
Das Schriftzeichen U+002D ist überholt. Einen Bindestrich (‐), Minuszeichen (−), Gedankenstrich (–) oder Aufzählungszeichen (•) verwenden. (unicode)
    //   `swift test --generate-linuxmain`

Zeile 6
Das Schriftzeichen U+002D ist überholt. Einen Bindestrich (‐), Minuszeichen (−), Gedankenstrich (–) oder Aufzählungszeichen (•) verwenden. (unicode)
    //   `swift test --generate-linuxmain`

Tests/LinuxMain.swift

$ Dependency fail
Hello, world!

✗ Der Quelltext besteht das Korrekturlesen nicht. (Siehe [⌘F] „§1“)

„BadStyle“ besteht die Überprüfung nicht.
2
