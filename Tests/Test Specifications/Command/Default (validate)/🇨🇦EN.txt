$ workspace validate •no‐colour
[Refreshing ...]

Validating “Default”...


Proofreading source code... (§1)

.gitignore
Package.swift
Line 2
The character U+002D is obsolete. Use a hyphen (‐), minus sign (−), dash (—), bullet (•) or range symbol (–). (unicode)
// The swift-tools-version declares the minimum version of Swift required to build this package.

Line 2
The character U+002D is obsolete. Use a hyphen (‐), minus sign (−), dash (—), bullet (•) or range symbol (–). (unicode)
// The swift-tools-version declares the minimum version of Swift required to build this package.

Line 17
The character U+0022 is obsolete. Use quotation marks (“, ”) or double prime (′′). (unicode)
    // .package(url: /* package url */, from: "1.0.0"),

Line 17
The character U+0022 is obsolete. Use quotation marks (“, ”) or double prime (′′). (unicode)
    // .package(url: /* package url */, from: "1.0.0"),

README.md
Sources/Default/Default.swift
Line 1
Every symbol in a library should have access control. (accessControl)
struct Default {

Line 2
Every symbol in a library should have access control. (accessControl)
  var text = "Hello, World!"

Tests/DefaultTests/DefaultTests.swift
Tests/DefaultTests/XCTestManifests.swift
Line 1
Test manifests are no longer necessary. (deprecatedTestManifests)
import XCTest

#if !canImport(ObjectiveC)
  public func allTests() -> [XCTestCaseEntry] {
    return [
      testCase(DefaultTests.allTests)
    ]
  }
#endif

Line 4
Executables and tests should not contain access control. (accessControl)
  public func allTests() -> [XCTestCaseEntry] {
   func allTests() -> [XCTestCaseEntry] {

Tests/LinuxMain.swift

Checking build for macOS... (§2)

[$ swift...]

Checking build for tvOS... (§3)

[$ xcodebuild...]

Checking build for iOS... (§4)

[$ xcodebuild...]

Checking build for watchOS... (§5)

[$ xcodebuild...]


Testing on macOS... (§6)

[$ swift...]

Checking test coverage on macOS... (§7)

Parsing report for “Tests/DefaultTests/DefaultTests.swift”...

Checking documentation coverage... (§8)


No original copyright date is specified.
(Configure it under “documentation.api.yearFirstPublished”. See https://sdggiesbrecht.github.io/Workspace/🇨🇦EN/Types/WorkspaceConfiguration.html.)

Parsing “Default”...
Loading inheritance from “Swift”...
Loading inheritance from “Foundation”...
Loading inheritance from “Dispatch”...
Loading inheritance from “XCTest”...
Processing API...
Generating HTML...

A localization has no copyright specified: English (Canada)
(Configure it under “documentation.api.copyrightNotice”. See https://sdggiesbrecht.github.io/Workspace/🇨🇦EN/Types/WorkspaceConfiguration.html.)


A symbol has no description:
Default.🇨🇦EN
(Packages, products and modules (targets) can be documented in the package manifest the same way as other symbols.
Workspace will look for documentation on the line above “Package(name: "Default"”.)


A symbol has no description:
Default.🇨🇦EN
(Packages, products and modules (targets) can be documented in the package manifest the same way as other symbols.
Workspace will look for documentation on the line above “.library(name: "Default"”.)

...Default...

A symbol has no description:
Default.🇨🇦EN
(Packages, products and modules (targets) can be documented in the package manifest the same way as other symbols.
Workspace will look for documentation on the line above “.target(name: "Default"”.)


Summary


✗ Source code fails proofreading. (See [⌘F] “§1”)
✓ There are no compiler warnings for macOS.
✓ There are no compiler warnings for tvOS.
✓ There are no compiler warnings for iOS.
✓ There are no compiler warnings for watchOS.
✓ Tests pass on macOS.
✓ Test coverage is complete on macOS.
✗ Documentation coverage is incomplete. (See [⌘F] “§8”)


The project has no localizations configured.
Workspace has fallen back to the system language, which may produce different results on different devices.
(Configure it under “documentation.localizations”. See https://sdggiesbrecht.github.io/Workspace/🇨🇦EN/Types/WorkspaceConfiguration.html.)

“Default” fails validation.
2
