$ workspace validate test‐coverage •no‐colour

Refreshing Xcode project...

[$ swift...]

Writing to “FailingTests.xcodeproj/project.pbxproj”...

Testing on macOS with the Swift Package Manager... (§1)

[$ swift...]

Checking test coverage on macOS... (§2)

Parsing report for “Sources/FailingTests/Exempt/Exempt.swift”...
Parsing report for “Sources/FailingTests/FailingTests.swift”...
Parsing report for “Tests/FailingTestsTests/FailingTestsTests.swift”...
Sources/FailingTests/FailingTests.swift
Line 7
        return "???"


Testing on macOS with Xcode... (§3)

[$ xcodebuild...]

Checking test coverage on macOS... (§4)

Parsing report for “[Temporary]/FailingTests/Sources/FailingTests/Exempt/Exempt.swift”...
Parsing report for “[Temporary]/FailingTests/Sources/FailingTests/FailingTests.swift”...
Parsing report for “[Temporary]/FailingTests/Tests/FailingTestsTests/FailingTestsTests.swift”...
[Temporary]/FailingTests/Sources/FailingTests/FailingTests.swift
Line 6
    func notCovered() -> String {
        return "???"


✗ Tests fail on macOS with the Swift Package Manager. (See [⌘F] “§1”)
✗ Test coverage is incomplete on macOS. (See [⌘F] “§2”)
✗ Tests fail on macOS with Xcode. (See [⌘F] “§3”)
✗ Test coverage is incomplete on macOS. (See [⌘F] “§4”)

“FailingTests” fails validation.
2
