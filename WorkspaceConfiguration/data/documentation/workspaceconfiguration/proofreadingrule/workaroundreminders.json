{"metadata":{"role":"symbol","symbolKind":"case","roleHeading":"Case","externalID":"s:22WorkspaceConfiguration16ProofreadingRuleO19workaroundRemindersyA2CmF","title":"ProofreadingRule.workaroundReminders","modules":[{"name":"WorkspaceConfiguration"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"workaroundReminders"}]},"abstract":[{"text":"Catches outdated workaround reminders.","type":"text"}],"identifier":{"url":"doc:\/\/WorkspaceConfiguration\/documentation\/WorkspaceConfiguration\/ProofreadingRule\/workaroundReminders","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/WorkspaceConfiguration\/documentation\/WorkspaceConfiguration","doc:\/\/WorkspaceConfiguration\/documentation\/WorkspaceConfiguration\/ProofreadingRule"]]},"variants":[{"paths":["\/documentation\/workspaceconfiguration\/proofreadingrule\/workaroundreminders"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"workaroundReminders"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Workaround reminders are for times when you need to implement a temporary workaround because of a problem in a dependency, and you would like to remind yourself to go back and remove the workaround once the dependency is fixed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The text, ","type":"text"},{"code":"#workaround(Some description here.)","type":"codeVoice"},{"text":" will trigger a warning during proofreading, but will still pass validation.","type":"text"}]},{"type":"heading","level":3,"text":"Version Detection","anchor":"Version-Detection"},{"type":"paragraph","inlineContent":[{"text":"Optionally, a workaround reminder can specify the dependency and version were the problem exists. Then Workspace will ignore it until the problematic version is out of date.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"#workaround(SomeDependency 0.0.0, Some description here.)"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The dependency can be specified three different ways."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Package dependencies can be specified using the exact name of the package."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ #workaround(MyLibrary 1.0.0, There is a problem in MyLibrary.)"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift itself can be specified with the string "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ #workaround(Swift 3.0.2, There is a problem with Swift.)"]}]},{"content":[{"inlineContent":[{"type":"text","text":"Arbitrary dependencies can be specified by shell commands which output a version number. Workspace will look for the first group of the characters "},{"type":"codeVoice","code":"0"},{"type":"text","text":"â€“"},{"type":"codeVoice","code":"9"},{"type":"text","text":" and "},{"type":"codeVoice","code":"."},{"type":"text","text":" in the command output. Only simple commands are supported; commands cannot contain quotation marks."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ #workaround(git --version 2.10.1, There is a problem with Git.) @exempt(from: unicode)"]}]}]}],"kind":"content"}],"sections":[],"references":{"doc://WorkspaceConfiguration/documentation/WorkspaceConfiguration/ProofreadingRule":{"url":"\/documentation\/workspaceconfiguration\/proofreadingrule","kind":"symbol","identifier":"doc:\/\/WorkspaceConfiguration\/documentation\/WorkspaceConfiguration\/ProofreadingRule","abstract":[{"text":"A proofreading rule.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ProofreadingRule","kind":"identifier"}],"title":"ProofreadingRule","type":"topic","navigatorTitle":[{"text":"ProofreadingRule","kind":"identifier"}]},"doc://WorkspaceConfiguration/documentation/WorkspaceConfiguration":{"identifier":"doc:\/\/WorkspaceConfiguration\/documentation\/WorkspaceConfiguration","url":"\/documentation\/workspaceconfiguration","type":"topic","abstract":[{"text":"The root API used in configuration files.","type":"text"}],"title":"WorkspaceConfiguration","role":"collection","kind":"symbol"},"doc://WorkspaceConfiguration/documentation/WorkspaceConfiguration/ProofreadingRule/workaroundReminders":{"role":"symbol","type":"topic","url":"\/documentation\/workspaceconfiguration\/proofreadingrule\/workaroundreminders","title":"ProofreadingRule.workaroundReminders","abstract":[{"text":"Catches outdated workaround reminders.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"workaroundReminders","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/WorkspaceConfiguration\/documentation\/WorkspaceConfiguration\/ProofreadingRule\/workaroundReminders"}}}